load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/cam-PerformanceAnalysis.RData")
system.time(overallTRP(cam2000, getAllUserIds(cam2000), rounds="all", cost_ids=4, tri.refps = triRefPs))
cam4000 <- read.csv("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/BAFiles/Daten4/Tabelle4000000.csv")
View(cam4000)
cam8000 <- read.csv("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/BAFiles/Daten4/Tabelle8000000.csv")
head(cam8000)
getAllUserIds(cam8000)
dim(cam2000)
dim(cam4000)
dim(cam8000)
save.image("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/cam-PerformanceAnalysis.RData")
system.time(overallTRP(cam430, getAllUserIds(cam430), rounds="all", cost_ids=4, tri.refps = triRefPs))
Delete <- overallTRP(cam430, getAllUserIds(cam430), rounds="all", cost_ids=4, tri.refps = triRefPs)
head(Delete)
Delete <- overallTRP(cam430, getAllUserIds(cam430), rounds="all", cost_ids=4, tri.refps = triRefPs)
head(Delete)
rm(Delete)
save.image("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/cam-PerformanceAnalysis.RData")
R.version$year
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/oldVariablesDelete.RData")
devtools::load_all(".")
decisionMatrix(cam4, allUsers)
decisionMatrix(cam4, 6)
devtools::load_all(".")
decisionMatrix(cam4, 6)
decisionMatrix
source("R/DecisionMatrix.R")
decisionMatrix(cam4, 6)
overallDRP(cam4, 10, rounds="all")
overallDRP(cam4, 10, rounds="all", dual.refps=dualRefPs)
overallTRP(cam4, 10, rounds="all", tri.refps=triRefPs)
overallTRP(cam4, 10, rounds="all", tri.refps=triRefPs, cost_ids=4)
Delete <- overallTRP(cam4, 10, rounds="all", tri.refps=triRefPs, cost_ids=4)
names(Delete[[1]])
c(names(Delete[[1]]))
?names
class(names(Delete[[1]]))
as.numeric(names(Delete[[1]]))
overallPV(cam4, 10)
pathnames <- list.files(pattern="[.]R$", path="R/", full.names=TRUE);
sapply(pathnames, FUN=source);
overallPV(cam4, 10)
overallTRP(cam4, 10, rounds="all", tri.refps=triRefPs, cost_ids=4)
overallDRP(cam4, 10, rounds="all", dual.refps=dualRefPs)
devtools::load_all(".")
refPs
refPs <- c(1.5,1.5,1.5,0.17)
triRefPs
source("R/TestFunctions.R")
overallPV(cam4, allUsers, rounds="all", cost_ids=4)
getNamesAsNums(overallPV(cam4, allUsers, rounds="all", cost_ids=4))
getNamesAsNums(sort(decreasing, overallPV(cam4, allUsers, rounds="all", cost_ids=4)))
getNamesAsNums(sort(decreasing = T, overallPV(cam4, allUsers, rounds="all", cost_ids=4)))
getNamesAsNums(overallPV(cam4, allUsers, rounds="all", cost_ids=4))
source("R/TestFunctions.R")
getNamesAsNums(overallPV(cam4, allUsers, rounds="all", cost_ids=4))
source("R/TestFunctions.R")
getNamesAsNums(overallPV(cam4, allUsers, rounds="all", cost_ids=4))
source("R/TestFunctions.R")
getNamesAsNums(overallPV(cam4, allUsers, rounds="all", cost_ids=4))
getNamesAsNums(overallPV(cam4, allUsers, rounds="all", cost_ids=4))
resPV.diff <- getNamesAsNums(overallPV(cam4, allUsers, rounds="all", cost_ids=4))
resDRP.diff <- getNamesAsNums(overallDRP(cam4, allUsers, rounds="all", cost_ids=4, dual.refps = dualRefPs))
heaD(resDRP)
head(resDRP)
head(resDRP.diff)
resPV.diff <- getNamesAsNums(overallPV(cam4, allUsers, rounds="all", cost_ids=4, refps = refPs))
head(resPV.diff)
resTRP.diff <- getNamesAsNums(overallDRP(cam4, allUsers, rounds="all", cost_ids=4, tri.refps = triRefPs))
resTRP.diff <- getNamesAsNums(overallTRP(cam4, allUsers, rounds="all", cost_ids=4, tri.refps = triRefPs))
head(resTRP.diff)
x <- 1:10
y <- c(5:1, 6, 10:7)
x
y
spearman.test(x, y)
install.packages("pspearman")
spearman.test(x, y)
library(pspearman)
spearman.test(x, y)
spearman.test(x, x)
spearman.test(x, x)$p.value
spearman.test(x, x)$rho.value
spearman.test(x, x)$rho
class(spearman.test(x, x))
spearman.test(x, x)$estimate
source("R/TestFunctions.R")
resTRP.diff <- getNamesAsNums(overallTRP(cam4, allUsers, rounds="all", cost_ids=4, tri.refps = triRefPs))
correlationS(resPT.diff, resDRP.diff)
correlationS(resPV.diff, resDRP.diff)
?mapply
mapply(function(x, y) spearman.test(x,y)$estimate, c(1,3), c(1,2))
resPV
spearman.test(1:2,2:3)
resPV.diff
users2correlate <- allUsers
users2correlate
users2correlate[-c(51,52)]
users2correlate <- users2correlate[-c(51,52)]
resPV.diff <- getNamesAsNums(overallPV(users2correlate, allUsers, rounds="all", cost_ids=4, refps = refPs))
resDRP.diff <- getNamesAsNums(overallDRP(users2correlate, allUsers, rounds="all", cost_ids=4, dual.refps = dualRefPs))
resTRP.diff <- getNamesAsNums(overallTRP(users2correlate, allUsers, rounds="all", cost_ids=4, tri.refps = triRefPs))
resPV.diff <- getNamesAsNums(overallPV(cam4, users2correlate, rounds="all", cost_ids=4, refps = refPs))
resDRP.diff <- getNamesAsNums(overallDRP(cam4, users2correlate, rounds="all", cost_ids=4, dual.refps = dualRefPs))
resTRP.diff <- getNamesAsNums(overallTRP(cam4, users2correlate, rounds="all", cost_ids=4, tri.refps = triRefPs))
correlationS(resPV.diff, resDRP.diff)
class(correlationS(resPV.diff, resDRP.diff))
mean(correlationS(resPV.diff, resDRP.diff))
mean(correlationS(resPV.diff, resTRP.diff))
mean(correlationS(resDRP.diff, resTRP.diff))
resPV.entro <- getNamesAsNums(overallPV(cam4, users2correlate, rounds="all", cost_ids=4, refps = refPs, weightFUN="entropy"))
resDRP.entro <- getNamesAsNums(overallDRP(cam4, users2correlate, rounds="all", cost_ids=4, dual.refps = dualRefPs, weightFUN="entropy"))
resTRP.entro <- getNamesAsNums(overallTRP(cam4, users2correlate, rounds="all", cost_ids=4, tri.refps = triRefPs, weightFUN="entropy"))
users2correlate
users2correlate[-1]
users2correlate <- users2correlate[-1]
resPV.entro <- getNamesAsNums(overallPV(cam4, users2correlate, rounds="all", cost_ids=4, refps = refPs, weightFUN="entropy"))
resDRP.entro <- getNamesAsNums(overallDRP(cam4, users2correlate, rounds="all", cost_ids=4, dual.refps = dualRefPs, weightFUN="entropy"))
resTRP.entro <- getNamesAsNums(overallTRP(cam4, users2correlate, rounds="all", cost_ids=4, tri.refps = triRefPs, weightFUN="entropy"))
resPV.diff <- getNamesAsNums(overallPV(cam4, users2correlate, rounds="all", cost_ids=4, refps = refPs))
resDRP.diff <- getNamesAsNums(overallDRP(cam4, users2correlate, rounds="all", cost_ids=4, dual.refps = dualRefPs))
resTRP.diff <- getNamesAsNums(overallTRP(cam4, users2correlate, rounds="all", cost_ids=4, tri.refps = triRefPs))
mean(correlationS(resPV.diff, resDRP.diff))
mean(correlationS(resPV.diff, resTRP.diff))
mean(correlationS(resDRP.diff, resTRP.diff))
mean(correlationS(resPV.entro, resDRP.entro))
mean(correlationS(resPV.entro, resTRP.entro))
mean(correlationS(resDRP.entro, resTRP.entro))
resPV.high <- getNamesAsNums(overallPV(cam4, users2correlate, rounds="all", cost_ids=4, refps = refPs, weightFUN="highAndStandard"))
resDRP.high <- getNamesAsNums(overallDRP(cam4, users2correlate, rounds="all", cost_ids=4, dual.refps = dualRefPs, weightFUN="highAndStandard"))
resTRP.high <- getNamesAsNums(overallTRP(cam4, users2correlate, rounds="all", cost_ids=4, tri.refps = triRefPs, weightFUN="highAndStandard"))
resPV.high <- getNamesAsNums(overallPV(cam4, users2correlate, rounds="all", cost_ids=4, refps = refPs, weightFUN="highAndStandard", gamma=0.5))
resDRP.high <- getNamesAsNums(overallDRP(cam4, users2correlate, rounds="all", cost_ids=4, dual.refps = dualRefPs, weightFUN="highAndStandard", gamma=0.5))
resTRP.high <- getNamesAsNums(overallTRP(cam4, users2correlate, rounds="all", cost_ids=4, tri.refps = triRefPs, weightFUN="highAndStandard", gamma=0.5))
mean(correlationS(resPV.high, resDRP.high))
mean(correlationS(resPV.high, resTRP.high))
mean(correlationS(resDRP.high, resTRP.high))
citation("pspearman")
pvMatrix(myData)
pvMatrix(myData, 33)
devtools::load_all(".")
overallPC(myData, 33)
overallPV(myData, 33)
devtools::load_all(".")
overallPV(myData, 33, rounds="all", cost_ids = 4, weightFUN = "entropy")
trp.valueMatrix(myData, 10, rounds="all", cost_ids=4, tri.refps=triRefPs)
pvMatrix(myData, 10, rounds="all", cost_ids=4, refps=refPs)
namesPRID
rankedRatings
length(rankedRatings)
oPT.diff
ranked.oDRP.diff
new.vPT
refPs
dualRefPs
triRefPS
triRefPs
new.vTRP
length(ppastedNamesPRID)
length(pastedNamesPRID)
pastedNamesPRID
new.vPT
new.vDRP
new.vTRP
oPT.entropy
oDRP.entropy
oTRP.entropy
oPT.diff
oPT.entropy 	<- mapply(overall_pv_extend, new.vPT, getAttrWeights(weightFUN="entropy"))
oPT.entropy 	<- mapply(overall_pv_extend, new.vPT, getAttrWeights(cam4, pastedNamesPRID, weightFUN="entropy"))
oPT.entropy
length(oPT.entropy)
length(new.vPT)
length(getAllUserIds(cam4)
)
oPT.entropy[pastedNamesPRID]
length(oPT.entropy[pastedNamesPRID])
pasted.vPT <- new.vPT[pastedNamesPRID]
length(pasted.vPT)
pasted.vPT  <- new.vPT[pastedNamesPRID]
pasted.vDRP <- new.vDRP[pastedNamesPRID]
pasted.vTRP <- new.vTRP[pastedNamesPRID]
identical(pasted.vPT, pasted.DRP)
identical(pasted.vPT, pasted.vDRP)
all.equal(pasted.vPT, pasted.vDRP)
pasted.vDRP
pasted.vTRP
pasted.vPT
oPT.entropy 	<- mapply(overall_pv_extend, pasted.vPT, getAttrWeights(cam4, pastedNamesPRID, weightFUN="entropy"))
oPT.entropy
oDRP.entropy  <- mapply(overall_pv_extend, pasted.vDRP, getAttrWeights(cam4, pastedNamesPRID, weightFUN="entropy"))
oTRP.entropy  <- mapply(overall_pv_extend, pasted.vTRP, getAttrWeights(cam4, pastedNamesPRID, weightFUN="entropy"))
oDRP.entropy
oTRP.entropy
oTRP.entropy[[1]]
ranked.oPT.entropy 	<- sapply(oPT.entropy, sort, decreasing=T)
ranked.oDRP.entropy  <- sapply(oDRP.entropy, sort, decreasing=T)
ranked.oTRP.entropy  <- sapply(oTRP.entropy, sort, decreasing=T)
ranked.oTRP.entropy[[1]]
rankedRatings
ranked.oPT.entropy
save.image("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/cam-PerformanceAnalysis.RData")
getAttrWeights(cam4, pastedNamesPRID, weightFUN = "entropy")
getAttrWeights(cam4, pastedNamesPRID, weightFUN = "entropy", cost_ids=4)
getAttrWeights(cam4, pastedNamesPRID, weightFUN = "entropy", cost_ids=4, rounds="all")
oPT.entropy 	<- mapply(overall_pv_extend, pasted.vPT, getAttrWeights(cam4, pastedNamesPRID, weightFUN="entropy", rounds="all"))
oDRP.entropy  <- mapply(overall_pv_extend, pasted.vDRP, getAttrWeights(cam4, pastedNamesPRID, weightFUN="entropy", rounds="all"))
oTRP.entropy  <- mapply(overall_pv_extend, pasted.vTRP, getAttrWeights(cam4, pastedNamesPRID, weightFUN="entropy", rounds="all"))
ranked.oPT.entropy 	<- sapply(oPT.entropy, sort, decreasing=T)
ranked.oDRP.entropy  <- sapply(oDRP.entropy, sort, decreasing=T)
ranked.oTRP.entropy  <- sapply(oTRP.entropy, sort, decreasing=T)
ranked.oPT.entropy
ranked.oDRP.entropy
ranked.oTRP.entropy
ranked.oDRP.entropy
ranked.oPT.entropy
ranked.oTRP.entropy
ranked.oTRP.entropy
oPT.hs 	<- mapply(overall_pv_extend, pasted.vPT, getAttrWeights(cam4, pastedNamesPRID, weightFUN="highAndStandard", rounds="all", gamma=0.6))
oDRP.hs  <- mapply(overall_pv_extend, pasted.vDRP, getAttrWeights(cam4, pastedNamesPRID, weightFUN="highAndStandard", rounds="all", gamma=0.6))
oTRP.hs  <- mapply(overall_pv_extend, highAndStandardvTRP, getAttrWeights(cam4, pastedNamesPRID, weightFUN="highAndStandard", rounds="all", gamma=0.6))
oPT.hs 	<- mapply(overall_pv_extend, pasted.vPT, getAttrWeights(cam4, pastedNamesPRID, weightFUN="highAndStandard", rounds="all", gamma=0.6))
oDRP.hs <- mapply(overall_pv_extend, pasted.vDRP, getAttrWeights(cam4, pastedNamesPRID, weightFUN="highAndStandard", rounds="all", gamma=0.6))
oTRP.hs <- mapply(overall_pv_extend, pasted.vTRP, getAttrWeights(cam4, pastedNamesPRID, weightFUN="highAndStandard", rounds="all", gamma=0.6))
oPT.hs
oDRP.hs
o-tRP.hs
oTRP.hs
ranked.oPT.hs 	<- sapply(oPT.hs, sort, decreasing=T)
ranked.oDRP.hs  <- sapply(oDRP.hs, sort, decreasing=T)
ranked.oTRP.hs  <- sapply(oTRP.hs, sort, decreasing=T)
ranked.oPT.hs
ranked.oPT.hs
ranked.oPT.hs
ranked.oTRP.hs
ranked.oPT.hs
ranked.oPT.hs
ranked.oDRP.hs
ranked.oDRP.hs
ranked.oDRP.hs
ranked.oTRP.hs
ranked.oTRP.hs
ranked.oTRP.hs
devtools::load_all(".")
cam4
dim(cam4)
dim(cam2000)
overallTRP(cam4, 10, rounds="all")
overallTRP(cam4, 10, rounds="all", tri.refps=triRefPs)
overallTRP(cam4, 10, rounds="all", tri.refps=triRefPs, cost_ids=4)
devtools::load_all(".")
matrix(c(9,12,12,12,350,350,350,350,12,12,15,15,125,150,175,125), 4, 4, byrow = T)
matrix(c(9,12,12,12,350,350,350,350,12,12,15,15,125,150,175,125), 4, 4)
aMatrix <- matrix(c(9,12,12,12,350,350,350,350,12,12,15,15,125,150,175,125), 4, 4)
aMatrix
?apply
apply(aMatrix, 2, gain_fun_a)
gain_fun_a
devtools::load_all(".")
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/oldVariablesDelete.RData")
dim(cam8000)
source(productConfig)
library()
decisionMatrix(myData, 11)
prids1 <- read.csv("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/New Data/conf1/conf1_products.csv")
View(prids1)
summary(prids1.)
summary(prids1)
head(prids1)
getAllUserIds
devtools::load_all(".")
getAllPrids(prids1)
config1 <- read.csv("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/New Data/conf1/conf1_config_restricted.csv")
View(config1)
userRatings <- read.csv("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/New Data/conf1/conf1_userproduct.csv")
View(userRatings)
userRatings1 <- userRatings
rm(userRatings)
summary(userRatings1)
devtools::load_all(".")
getAllValues(prids1)
devtools::load_all(".")
getAllValues(prids1)
?subset
get_all_default_rps
subset(prids1, atid = 1:3, select = c(atid,value))
subset(prids1, atid = 1:3, select = c(atid,value))
get_aget_attr_values(config1)
get_attr_values(config1)
get_attr_values(config1, 1:3)
getAttrValues(config1, 1:3)
get_attrs_ID(config1)
getAllPrids(config1)
getAllPrids(prids1)
getAttrValues(config1)
devtools::load_all(".")
getPridValues(prids1)
devtools::load_all(".")
head(prids1)
getPridValues(prids1)
prids1[prid]
prids1["prid"]
devtools::load_all(".")
getPridValues(prids1)
getPridValues(prids1)
devtools::load_all(".")
getPridValues(prids1)
devtools::load_all(".")
getPridValues(prids1)
getPridValues(prids1)
devtools::load_all(".")
getPridValues(prids1)
getAllPrids(prids1)
subset(prids1, atid = 1, select = c(atid,value))
subset(prids1, prid = 1, select = c(atid,value))
subset(prids1, prid == 1, select = c(atid,value))
subset(prids1, atid == 1, select = c(atid,value))
subset(prids1, atid == 2, select = c(atid,value))
unique(subset(prids1, atid == 2, select = c(atid,value))$value)
unique(subset(prids1, atid == 3, select = c(atid,value))$value)
subset(prids1, prid == c(1,6,14,27,31), select = c(atid,value))
subset(prids1, prid == c(1,6,14,27,31), select = c(atid,value))
with(prids1, subset(prid == c(1,6,14,27,31), atid, value))
with(prids1, subset( atid, value, prid == c(1,6,14,27,31)))
with(prids1, subset(atid, prid == c(1,6,14,27,31)))
getAttrValues
getDefaultRefps()
getDefaultRefps
devtools::load_all(".")
getTableById()
getTableById
devtools::load_all(".")
getTableByPrid(prids1, c(1,2,3))
getTableByPrid(prids1, c(1,2,3))
usefulPrids1 <- getTableByPrid(prids1, c(1,6,14,27,31)
)
useful
usefulPrids1
?apply
c(1,2,3[1])
c(1,2,3)[1]
devtools::load_all(".")
convertValues(prids1, c(6,8,10,12))
convertValues(usefulPrids1, c(6,8,10,12))
usefulPrids1
convertValues(usefulPrids1, c(6,8,10,12))
?lapply
lapply(usefulPrids1, function(x) x$value)
devtools::load_all(".")
convertValues(usefulPrids1, c(6,8,10,12))
devtools::load_all(".")
convertValues(usefulPrids1, c(6,8,10,12))
convertValues(usefulPrids1, c(6,8,10,12))
devtools::load_all(".")
convertValues(usefulPrids1, c(6,8,10,12))
devtools::load_all(".")
convertValues(usefulPrids1, c(6,8,10,12))
?apply
devtools::load_all(".")
convertValues(usefulPrids1, c(6,8,10,12))
lapply(usefulPrids1, function(x) x$value)
class(lapply(usefulPrids1, function(x) x$value)=
class(lapply(usefulPrids1, function(x) x$value))
class(lapply(usefulPrids1, function(x) x$value)[1])
class(lapply(usefulPrids1, function(x) x$value)[[1])
class(lapply(usefulPrids1, function(x) x$value)[[1]])
devtools::load_all(".")
convertValues(usefulPrids1, c(6,8,10,12))
devtools::load_all(".")
convertValues(usefulPrids1, c(6,8,10,12))
devtools::load_all(".")
convertValues(usefulPrids1, c(6,8,10,12))
devtools::load_all(".")
convertValues(usefulPrids1, c(6,8,10,12))
lapply(usefulPrids1, function(x) x$value)
devtools::load_all(".")
lapply(usefulPrids1, function(x) x$value)
test <- lapply(usefulPrids1, function(x) x$value)
lapply(test, convert2, vectorFrom)
lapply(test, convert2, c(1,2,3,4))
devtools::load_all(".")
lapply(test, convert2, c(1,2,3,4))
devtools::load_all(".")
lapply(test, convert2, c(1,2,3,4))
devtools::load_all(".")
lapply(test, convert2, c(1,2,3,4))
test
devtools::load_all(".")
lapply(test, convert2, c(1,2,3,4))
lapply(test, convert2, c(6,8,10,12))
devtools::load_all(".")
lapply(test, convert2, c(6,8,10,12))
devtools::load_all(".")
devtools::load_all(".")
lapply(test, convert2, c(6,8,10,12))
convertValues(usefulPrids1)
convertValues(usefulPrids1, c(6,8,10,12))
usefulPrids1
convertValues(usefulPrids1, c(6,8,10,12))
devtools::load_all(".")
convertValues(usefulPrids1, c(6,8,10,12,1.5,2.5,3.5,4.5,850,700,550,400))
devtools::load_all(".")
convertValues(usefulPrids1, c(6,8,10,12))
convertValues(usefulPrids1, c(6,8,10,12,1.5,2.5,3.5,4.5,850,700,550,400))
devtools::load_all(".")
convertValues(usefulPrids1, c(6,8,10,12,1.5,2.5,3.5,4.5,850,700,550,400))
convertValues(usefulPrids1, c(6,8,10,12,1.5,2.5,3.5,4.5,850,700,550,400))
prids1[prid==c(1,2,3)]
prids1["prid"==c(1,2,3)]
prids1
head(prids1)
prids1$prid==c(1,2,3)
prids1[prids1$prid==c(1,2,3)]
prids1[1, prids1$prid==c(1,2,3)]
prids1[prids1$prid==c(1,2,3), 1]
prids1[prids1$prid==c(1,2,3), 1:10]
prids1[prids1$prid==c(1,2,3), 1:2]
prids1[prids1$prid==c(1,2,3), 1:3]
prids1[prids1$prid==c(1,6,14,27,31), 1:3]
prids1[prids1$prid==c(1,6,14), 1:3]
prids1[prid==c(1,6,14), 1:3]
prids1[prids1$prid==c(1,6,14), 1:3]
prids1[prids1$prid==c(1,6,14,15), 1:3]
prids1[prids1$prid==c(1,6,14,15,16), 1:3]
?subset
subset(prids1, prid == 1:2)
subset(prids1, prid == c(1,6,14,27,31))
subset(prids1, prid == c(1,6,14,27,31) select=(atid, value))
prids1[prids1==c(1,2,3,4)]
prids1[prids1==c(1,2,3,4), 1:3]
prids1[$prid==c(1,2,3,4), 1:3]
prids1[prid==c(1,2,3,4), 1:3]
prids1[prids1$prid==c(1,2,3,4), 1:3]
prids1[prids1[,3] == c(1,6,14,27,31),]
prids1[prids1[,3] == 11,]
prids1[prids1[,1] == 11,]
prids1[prids1[,1] == c(1,6,14,27,31),]
prids1[prids1[,1] %in% c(1,6,14,27,31),]
devtools::load_all(".")
convertValues(usefulPrids1, usefulPrids1 c(6,8,10,12,1.5,2.5,3.5,4.5,850,700,550,400))
usefulPrids1
usefulPrids1 <- c(1,6,14,27,31)
convertValues(usefulPrids1, usefulPrids1 c(6,8,10,12,1.5,2.5,3.5,4.5,850,700,550,400))
devtools::load_all(".")
convertValues(usefulPrids1, usefulPrids1 c(6,8,10,12,1.5,2.5,3.5,4.5,850,700,550,400))
convertValues(usefulPrids1, usefulPrids1, c(6,8,10,12,1.5,2.5,3.5,4.5,850,700,550,400))
convertValues(usefulPrids1, usefulPrids1, 1:4)
convertValues(prids1, usefulPrids1 c(6,8,10,12,1.5,2.5,3.5,4.5,850,700,550,400))
convertValues(prids1, usefulPrids1, c(6,8,10,12,1.5,2.5,3.5,4.5,850,700,550,400))
devtools::load_all(".")
convertValues(prids1, usefulPrids1, c(6,8,10,12,1.5,2.5,3.5,4.5,850,700,550,400))
devtools::load_all(".")
devtools::load_all(".")
convertValues(prids1, usefulPrids1)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
convertValues(prids1, usefulPrids1, c(6,1.5,850), c(8,2.0,700), c(10,2.5,550), c(12,3.0,400))
devtools::load_all(".")
convertValues(prids1, usefulPrids1, c(6,1.5,850), c(8,2.0,700), c(10,2.5,550), c(12,3.0,400))
?apply
convertValues(prids1, usefulPrids1, c(6,1.5,850), c(8,2.0,700), c(10,2.5,550), c(12,3.0,400))
devtools::load_all(".")
convertValues(prids1, usefulPrids1, c(6,1.5,850), c(8,2.0,700), c(10,2.5,550), c(12,3.0,400))
devtools::load_all(".")
convertValues(prids1, usefulPrids1, c(6,1.5,850), c(8,2.0,700), c(10,2.5,550), c(12,3.0,400))
usefulPrids1
prids1[prids1[,1] %in% usefulPrids1,]
table1 <- prids1[prids1[,1] %in% usefulPrids1,]
table1[,3] <- c(0,0,1,0,2,3, 1,0,0, 2,3,2, 3,3,1)
table1
config2 <- read.csv("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/New Data/conf2/conf2_products.csv")
View(config2)
View(prids1)
usefulPrids2 <- c(7,21,29,37,43,51,57,65)
prids1[prids1[,1] %in% usefulPrids1,]
prids2 <- config2
rm(config2)
prids2[prids2[,1] %in% usefulPrids2,]
table2 <- prids2[prids2[,1] %in% usefulPrids2,]
table1
tableReady1 <- table1
table1 <- prids1[prids1[,1] %in% usefulPrids1,]
table2
table2
table2
unique(table2[1,]==1)
unique(table2[table2[1,]==1])
unique(table2[table2[1,]==7])
table2[table2[1,]==7]
table2[table2[,1]==7]
table2[table2[1,]==7]
table2[table2$prid==7]
table2[table2$prid==7, 1:3]
table2[table2$atid==1, 3]
table2[table2$atid==2, 3]
prids2
prids2
table2[table2$atid==1, 3]
table2[table2$atid==2, 3]
table2[table2$atid==3, 3]
unique(table2[table2$atid==3, 3])
unique(table2[table2$atid==4, 3])
table1
table2
as.data.frame(table2)
table2[table2==320]<-1000000
as.data.frame(table2)
save.image("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/R_paper environment.RData")
table2
