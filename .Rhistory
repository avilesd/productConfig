with(norm.gainLoss(myData, 9:10, rounds="all", binded = F), mapply(pvalue_fun, gain, loss))
powerful_function(myData, 9:10, rounds="all", FUN=pvalue_matrix)
devtools::load_all(".")
devtools::load_all(".")
pvMatrix(myData, 9:10, rounds="all")
lega <- powerful_function(myData, 9:10, rounds="all", FUN=pvalue_matrix)
newpv<-pvMatrix(myData, 9:10, rounds="all")
identical(lega, newpv)
equal(lega, newpv)
all.equal(lega, newpv)
sample(c("first","last","all",NULL), 1,)
sample(c("first","last","all",NULL), 1,)
all.equal(lega, newpv)
equal(lega, newpv)
all.equal(lega, newpv)
sample(c("first","last","all",NULL), 1)
sample(getAllUserIds(myData), 1)
sample(getAllUserIds(myData), 1)
devtools::load_all(".")
amountUsers <- sample(1:length(all.users))
randomUsers <- sample(all.users, amountUsers)
randoumUsers
randomUsers
devtools::load_all(".")
devtools::use_testthat()
devtools::load_all(".")
pvMatrix()
pvMatrix(myData, 9)
unname(pvMatrix(myData, 9))
powerful_function(myData,9,fun)
powerful_function(myData,9,fun=pvalue_matrix)
powerful_function(myData,9,FUN =pvalue_matrix)
powerful_function(myData,9:10,FUN =pvalue_matrix)
powerful_function(myData,9:10,FUN =pvalue_matrix, rounds="all")
unname(powerful_function(myData,9:10,FUN =pvalue_matrix, rounds="all"))
bb<-unname(powerful_function(myData,9:10,FUN =pvalue_matrix, rounds="all"))
aa<-unname(pvMatrix(myData, 9))
identical(aa,bb)
sample(c("first","last","all"), 1)
sample(1:length(all.users))
sample(all.users, amountUsers)
randomRounds <- sample(c("first","last","all"), 1)
amountUsers <- sample(1:length(all.users))
randomUsers <- sample(all.users, amountUsers)
legacyPV2 <- unname(powerful_function(camera2_config, randomUsers, rounds=randomRounds, FUN=pvalue_matrix))
renewedPV2 <- unname(pvMatrix(camera2_config, randomUsers, rounds=randomRounds))
legacyPV2 <- unname(powerful_function(myData, randomUsers, rounds=randomRounds, FUN=pvalue_matrix))
renewedPV2 <- unname(pvMatrix(myData, randomUsers, rounds=randomRounds))
legacyPV2
renewedPV2
devtools::load_all(".")
legacyPV2 <- unname(powerful_function(myData, randomUsers, rounds=randomRounds, FUN=pvalue_matrix))
renewedPV2 <- unname(pvMatrix(myData, randomUsers, rounds=randomRounds))
devtools::load_all(".")
legacyPV2 <- unname(powerful_function(myData, randomUsers, rounds=randomRounds, FUN=pvalue_matrix))
renewedPV2 <- unname(pvMatrix(myData, randomUsers, rounds=randomRounds))
devtools::load_all(".")
legacyPV2 <- unname(powerful_function(myData, randomUsers, rounds=randomRounds, FUN=pvalue_matrix))
renewedPV2 <- unname(pvMatrix(myData, randomUsers, rounds=randomRounds))
amountUsers
length(amountUsers)
length(all.users)
randomUsers
length(randomUsers)
randomRounds <- sample(c("first","last","all"), 1)
amountUsers <- sample(1:length(all.users))
randomUsers <- sample(all.users, amountUsers)
randoumRounds
randomRounds
amountUsers
randomRounds <- sample(c("first","last","all"), 1)
amountUsers <- sample(1:length(all.users), 1)
randomUsers <- sample(all.users, amountUsers)
randomRounds
amountUsers
randomUsers
length(randomUsers)
randomRounds <- sample(c("first","last","all"), 1)
amountUsers <- sample(1:length(all.users), 1)
randomUsers <- sample(all.users, amountUsers)
randomRounds
amountUsers
randomRounds
randomRounds
randomUsers
pvMatrix(camera2_config, randomUsers, rounds=randomRounds)
pvMatrix(myData, randomUsers, rounds=randomRounds)
pvMatrix(myData, sort(randomUsers), rounds=randomRounds)
devtools::load_all(".")
pvMatrix(myData, sort(randomUsers), rounds=randomRounds)
pvMatrix(myData, useridsort(randomUsers), rounds=randomRounds)
pvMatrix(myData, userid=sort(randomUsers), rounds=randomRounds)
pvMatrix(myData, userid=sort(randomUsers), rounds="all")
randomUsers
decisionMatrix(myData, randomUsers)
decisionMatrix(myData, randomUsers, rounds="all")
referencePoints(myData, randomUsers, rounds="all")
referencePoints(myData, randomUsers)
norm.gainLoss(myData, randomUsers)
norm.gainLoss(myData, randomUsers, rounds="all")
norm.gainLoss(myData, randomUsers, rounds="all", binded=F)
devtools::load_all(".")
legacyPV <- unname(powerful_function(myData, randomUsers, rounds=randomRounds, FUN=pvalue_matrix))
renewedPV <- unname(pvMatrix(myData, randomUsers, rounds=randomRounds))
View(legacyPV)
summary(legacyPV)
summary(renewedPV)
renewedPV
head(renewedPV)
head(legacyPV)
legacyPV <- unname(powerful_function(myData, randomUsers, rounds=randomRounds, FUN=pvalue_matrix))
renewedPV <- unname(pvMatrix(myData, randomUsers, rounds=randomRounds))
legacyPV
renewedPV
powerful_function(myData, 9:10, rounds="all", FUN=pvalue_matrix)
pvMatrix(camera2_config, 9:10, rounds="all")
pvMatrix(myData, 9:10, rounds="all")
pvMatrix(myData, 9:10, rounds="all")
devtools::load_all(".")
pvMatrix(myData, 9:10, rounds="all")
legacyPV <- unname(powerful_function(myData, randomUsers, rounds=randomRounds, FUN=pvalue_matrix))
renewedPV <- unname(pvMatrix(myData, randomUsers, rounds=randomRounds))
legacyPV
renewedPV
identical(legacyPV,renewedPV)
devtools::load_all(".")
randomRounds <- sample(c("first","last","all"), 1)
amountUsers <- sample(1:length(all.users), 1)
randomUsers <- sample(all.users, amountUsers)
legacyPV <- unname(powerful_function(camera2_config, randomUsers, rounds=randomRounds, FUN=pvalue_matrix))
renewedPV <- unname(pvMatrix(camera2_config, randomUsers, rounds=randomRounds))
legacyPV <- unname(powerful_function(myData, randomUsers, rounds=randomRounds, FUN=pvalue_matrix))
renewedPV <- unname(pvMatrix(myData, randomUsers, rounds=randomRounds))
renewedPV
legacyPV <- unname(powerful_function(myData, randomUsers, rounds=randomRounds, FUN=pvalue_matrix))
renewedPV <- unname(pvMatrix(myData, randomUsers, rounds=randomRounds))
renewedPV
rm(renewedPV, legacyPV, legacyPV2, randomRounds, randomUsers)
rm(amountUsers)
randomRounds <- sample(c("first","last","all"), 1)
amountUsers <- sample(1:length(all.users), 1)
randomUsers <- sample(all.users, amountUsers)
devtools::load_all(".")
legacyPV3 <- unname(powerful_function(myData, randomUsers, rounds=randomRounds, FUN=pvalue_matrix))
renewedPV3 <- unname(pvMatrix(myData, randomUsers, rounds=randomRounds))
pvMatrix(myData, randomUsers, rounds="last")
pvMatrix(myData, 9:10, rounds="last")
?with
devtools::load_all(".")
pvMatrix(myData, 9:10, rounds="last")
rm(randomRounds, randomUsers, amountUsers, renewedPV2, renewedPV3, lega, legacyPV3)
devtools::load_all(".")
identical(unname(pvalue_matrix(myData, 9)),unname(pvMatrix(myData, 9)))
pvalue_matrix(myData, 9)
pvMatrix(myData, 9)
all.equal(unname(pvalue_matrix(myData, 9)),unname(pvMatrix(myData, 9)))
all.equal(unname(list(pvalue_matrix(myData, 9))),unname(pvMatrix(myData, 9)))
devtools::load_all(".")
overallPV(myData, 9)
devtools::load_all(".")
overallPV(myData, 9)
overallPV(myData, 9, rounds="all")
overall_pv(myData, 9, rounds="all")
devtools::load_all(".")
overall_pv(myData, 9, rounds="all")
overallPV(myData, 9, rounds="all")
overallPV(myData, 9:11, rounds="all")
devtools::load_all(".")
overallPV(myData, 9:11, rounds="all")
ww <- get_attr_weight(myData, 9, rounds="all")
ww
overallPV(myData, 9:11, rounds="all")
powerful_function(myData, 9:11, FUN=overall_pv, rounds="all", weight=ww)
powerful_function(myData, 18, FUN=overall_pv, rounds="all")
overallPV(myData, 18, rounds="all")
system.time(replicate(10,powerful_function(myData, 18, FUN=overall_pv, rounds="all")))
system.time(replicate(10,overallPV(myData, 18, rounds="all")))
system.time(replicate(10,overallPV(myData, 18, rounds="all")))
devtools::load_all(".")
system.time(replicate(10,overallPV(myData, 18, rounds="all")))
system.time(replicate(10,overallPV(myData, 18, rounds="all")))
system.time(replicate(10,overallPV(myData, 18, rounds="all")))
system.time(replicate(100,overallPV(myData, 18, rounds="all")))
system.time(replicate(100,powerful_function(myData, 18, FUN=overall_pv, rounds="all")))
head(powerful_function(myData, all.users, FUN=overall_pv, rounds="all"))
head(overallPV(myData, all.users, rounds="all", weight = (0.25,0.25,0.25,0.25)))
head(overallPV(myData, all.users, rounds="all", weight = c(0.25,0.25,0.25,0.25)))
head(powerful_function(myData, all.users, FUN=overall_pv, rounds="all",(0.25,0.25,0.25,0.25)))
head(powerful_function(myData, all.users, FUN=overall_pv, rounds="all",weight=c(0.25,0.25,0.25,0.25)))
head(overallPV(myData, all.users, rounds="all", weight = (0.25,0.25,0.25,0.25)))
head(overallPV(myData, all.users, rounds="all", weight = c(0.25,0.25,0.25,0.25)))
hnew <- unname(head(overallPV(myData, all.users, rounds="all", weight = c(0.25,0.25,0.25,0.25))))
hold <- unname(head(powerful_function(myData, all.users, FUN=overall_pv, rounds="all",weight=c(0.25,0.25,0.25,0.25))))
identical(hnew, hold)
get_attr_weight(myData, 9)
get_attr_weight(myData, 10)
powerful_function(myData, 9:15, FUN=get_attr_weight)
decisionMatrix(myData, 11)
decisionMatrix(myData, 11, rounds="all")
?df
?diff
diff(1:10, 2)
diff(1:7, 2)
diff(1:10, 2,2)
?rep
rep(1,10)
diff(rep(1,10), 2,2)
diff(rep(1,10), 2)
diff(rep(1,10))
diff(rep.int(1,10))
?diff
dec11 <- decisionMatrix(myData, 11, rounds="all")
dec11
apply(dec11, 2, diff)
apply(dec11[[1]], 2, diff)
diffMatrix11 <- apply(dec11[[1]], 2, diff)
diffMatrix11 <- apply(diffMatrix11, 2, abs)
diffMatrix11
sumdiffMatrix11 <- apply(diffMatrix11, 2, sum)
sumdiffMatrix11
ndec11 <- (myData, 11, rounds="all")[[1]]
ndec11 <- (myData, 11, rounds="all")
ndec11 <- norm.gainLoss(myData, 11, rounds="all")
ndec11
ndiffMatrix11 <- apply(ndec11[[1]], 2, diff)
ndiffMatrix11
nabsdiffMatrix11 <- apply(ndiffMatrix11, 2, abs)
nabsdiffMatrix11
nsumdiffMatrix11 <- apply(ndiffMatrix11, 2, sum)
nsumdiffMatrix11
nsumdiffMatrix11 <- apply(nabsdiffMatrix11, 2, sum)
nsumdiffMatrix11
decisionMatrix(myData, 11, rounds="all")
norm.gainLoss(myData, 11, rounds="all")
ndec11 <- norm.gainLoss(myData, 11, rounds="all")
ndec$gain
ndec11 <- norm.gainLoss(myData, 11, rounds="all", binded = F)
ndec11
ndec11$loss
ndec11$gain
devtools::load_all(".")
devtools::load_all(".")
find_rtools()
library(devtools)
find_rtools(T)
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/new_BA.RData")
overallPV(myData, 9)
overall_pv(myData, 9)
overallPV(myData, 9:11)
overall_pv(myData, 9, rounds="all")
overall_pv(myData, 9, rounds="all", weight = 1:4)
overall_pv(myData, 9, weight = 1:4)
overall_pv(myData, 10, weight = 1:4)
overallPV(myData, 9, weight = 1:4)
overallPV(myData, 10, weight = 1:4)
overallPV(myData, 10:12, weight = 1:4)
devtools::load_all(".")
overallPV(myData, 10:12, weight = 1:4)
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/new_BA.RData")
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/.RData")
trp10.13 <- trpValueMatrix(myData, 10, attr=1:3, rounds="all")
devtools::load_all(".")
devtools::load_all(".")
trp10.13 <- trpValueMatrix(myData, 10, attr=1:3, rounds="all")
trp10.14 <- trpValueMatrix(myData, 10, attr=4, rounds="all", mr=-0.40, sq=-0.17,, g= 0.10)
trp10.13
trp10.14
dm10 <- decisionMatrix(myData, 10 , rounds="all")
dm10
trp10.14 <- trpValueMatrix(myData, 10, attr=4, rounds="all", mr=-0.40, sq=-0.17,, g= 0.10, cost_ids = 4)
trp10.14
trp10.13
dm10
mapply(cbind, trp10.13, trp10.14)
mapply(cbind, trp10.13, trp10.14, SIMPLIFY = F)
trp10.full <- mapply(cbind, trp10.13, trp10.14, SIMPLIFY = F)
save.image("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/new_BA.RData")
overallPV(myData, 10, rounds="all", cost_ids = 4)
mapply(overall_pv_extend, trp10.full)
mapply(overall_pv_extend, trp10.full, weight= getAttrWeights(myData, 10, rounds="all", cost_ids = 4))
trp10.overallPV <- mapply(overall_pv_extend, trp10.full, weight= getAttrWeights(myData, 10, rounds="all", cost_ids = 4))
head(trpValueMatrix(myData, all.users, attr=1:3, rounds="all"))
head(trpValueMatrix(myData, 9:10, attr=1:3, rounds="all"))
head(trpValueMatrix(myData, all.users, attr=1:3, rounds="all"))
overallPV(myData, all.users, attr=1:3, rounds="all")
devtools::load_all(".")
head(trpValueMatrix(myData, all.users, attr=1:3, rounds="all"))
devtools::load_all(".")
head(trpValueMatrix(myData, all.users, attr=1:3, rounds="all"))
?rm
all.users
rm(63, list(all.users))
list(all.users)
rm("63", all.users)
length(all.users)
all.users <- getAllUserIds(myData, 9)
all.users <- getAllUserIds(myData)
length(all.users)
all.users[51] <- NULL
all.users[50] <- NULL
all.users[50] <- 6
all.users[50] <- 62
all.users[51] <- 6
all.users
all.users <- unique(all.users)
all.users
head(trpValueMatrix(myData, all.users, attr=1:3, rounds="all"))
devtools::load_all(".")
head(trpValueMatrix(myData, all.users, attr=1:3, rounds="all"))
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="all")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="all")
devtools::load_all(".")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="all")
trpValueMatrix.oneAttr(myData, 63, attr=1, rounds="all")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="first")
devtools::load_all(".")
norm.gainLoss(myData, 9, rounds="all")
norm.gainLoss(myData, 9, rounds="first")
norm.gainLoss(myData, 63, rounds="first")
?max
devtools::load_all(".")
norm.gainLoss(myData, 63, rounds="first")
devtools::load_all(".")
norm.gainLoss(myData, 63, rounds="first")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="first")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="first")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="all")
?apply
max(0)
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="all")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="all")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="all")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="all")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="first")
devtools::load_all(".")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="first")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="first")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="first")
trpValueMatrix.oneAttr(myData, 63, attr=1, rounds="first")
trpValueMatrix.oneAttr(myData, 63, attr=1, rounds="all")
all.users <- getAllUserIds(my)
all.users <- getAllUserIds(myData)
trpValueMatrix(myData, all.users, attr=1:3, rounds="all")
trpValueMatrix(myData, 9, attr=1:3, rounds="all")
devtools::load_all(".")
trpValueMatrix(myData, 9, attr=1:3, rounds="all")
trpValueMatrix(myData, 10, attr=1:3, rounds="all")
trpValueMatrix(myData, 10, attr=1:3, rounds="all")
hmaxVector <- lapply(hmaxVector, function(temp2) replace(temp2, temp2==0.0, 1.00)) #remove 0 to avoid NA when dividing
trpValueMatrix(myData, 10, attr=1:3, rounds="all")
trp10.13
identical(trpValueMatrix(myData, 10, attr=1:3, rounds="all"),trp10.13)
devtools::load_all(".")
trpValueMatrix(myData, 10, attr=1:3, rounds="all")
trpValueMatrix.oneAttr(myData, 10, attr=1:3, rounds="all")
trpValueMatrix.oneAttr(myData, 10, attr=1, rounds="all")
trpValueMatrix.oneAttr(myData, 11, attr=1, rounds="all")
trpValueMatrix.oneAttr(myData, 11, attr=1, rounds="first")
trpValueMatrix.oneAttr(myData, 11, attr=1, rounds="last")
devtools::load_all(".")
devtools::load_all(".")
trpValueMatrix(myData, 11, attr=1, rounds="last")
trpValueMatrix(myData, 10, attr=1, rounds="last")
identical(trpValueMatrix(myData, 10, attr=1:3, rounds="all"),trp10.13)
trp10.14
dm10
c(1,2,3) *(-1)
devtools::load_all(".")
devtools::load_all(".")
trpValueMatrix(myData, 10, attr=1:3, rounds="all", mr =-0.10,sq=0.17,g=0.40, cost_ids=4)
devtools::load_all(".")
trpValueMatrix(myData, 10, attr=1:3, rounds="all", mr =-0.10,sq=0.17,g=0.40, cost_ids=4)
trpValueMatrix(myData, 10, attr=1:3, rounds="all", cost_ids=4)
trp10.13
devtools::load_all(".")
trpValueMatrix(myData, 10, attr=1:3, rounds="all", cost_ids=4)
devtools::load_all(".")
devtools::load_all(".")
trpValueMatrix(myData, 10, attr=1:3, rounds="all", cost_ids=4)
trpValueMatrix(myData, 10, attr=1:4, rounds="all", cost_ids=4)
trpValueMatrix(myData, 10, attr=4, rounds="all", cost_ids=4)
trpValueMatrix(myData, 10, attr=4, rounds="all", mr =-0.10,sq=0.17,g=0.40, cost_ids=4)
trpValueMatrix(myData, 10, attr=4, rounds="all", mr =-0.10,sq=0.17,g=0.40, cost_ids=4)
trp10.14
devtools::load_all(".")
trp10.full
devtools::load_all(".")
trp.overallPV_extend(trp10.full, getAttrWeights(myData, 10, rounds="all", cost_ids=4))
overallPV(myData, 10, rounds="all", cost_ids=4)
overallPV(myData, 10, rounds="all", cost_ids=4, refps=(1.5,1.5,1.5,0.17))
overallPV(myData, 10, rounds="all", cost_ids=4, refps=(1.5, 1.5, 1.5, 0.17))
overallPV(myData, 10, rounds="all",  refps=(1.5, 1.5, 1.5, 0.17), cost_ids=4)
overallPV(myData, 10, rounds="all",  refps=c(1.5, 1.5, 1.5, 0.17), cost_ids=4)
decisionMatrix(myData, 9, attr=4)
devtools::load_all(".")
?do.call
devtools::load_all(".")
referencePoints(myData,9)
xx <- norm.gainLoss.sep(myData, 9)
xx
norm.gainLoss(myData, 9)
norm.gainLoss(myData, 9, unbinded = T)
norm.gainLoss(myData, 9, binded = F)
trpValueMatrix(myData, all.users, rounds = "all")
devtools::load_all(".")
trpValueMatrix(myData, all.users, rounds = "all")
trpValueMatrix(myData, all.users, rounds = "all")
system.time(replicate(10, trpValueMatrix(myData, all.users, rounds = "all")))
system.time(replicate(100, trpValueMatrix(myData, all.users, rounds = "all")))
system.time(replicate(100, overallPV(myData, all.users, rounds = "all")))
system.time(replicate(100, overallPV(myData, all.users, rounds = "all", weight=1:4)))
save.image("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/trp-test-data.RData")
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/new_BA.RData")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?saveRDS
?saveRDS
saveRDS(trp10.13, "../productConfig/data/trp10-13.rds")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
trp10.13 <- readRDS("C:\Users\diego\Google Drive\KIT\Seminar_eC_HCI\R\productConfig/data/trp10-13.rds")
trp10.13 <- trpValueMatrix(myData, 10, attr=1:3, rounds="all")
trp10.13
saveRDS(trp10.13, "../productConfig/data/trp10-14.rds")
trp10.4 <- trp10.14
trp10.14
trp10.4
rm(trp10.14)
saveRDS(trp10.4, "../productConfig/data/trp10-4.rds")
trp10.14 <- trpValueMatrix(myData, 10, attr=4, rounds="all", mr=-0.40, sq=-0.17,, g= 0.10, cost_ids=4)
trp10.14
trp10.14 <- trpValueMatrix(myData, 10, attr=4, rounds="all", mr=-0.10, sq=0.17, g= 0.40, cost_ids=4)
trp10.14
trp10.4
trp10.14 <- trpValueMatrix(myData, 10, attr=4, rounds="all", mr=-0.40, sq=-0.17, g= 0.10)
trp10.4
trp10.14
trp10.14 <- trpValueMatrix(myData, 10, attr=4, rounds="all", mr=-0.40, sq=-0.17, g= 0.10)
trp10.14
dm10
decisionMatrix(myData, 10, rounds=1:3)
decision_matrix(myData, 9, rounds=1:3)
devtools::load_all(".")
decisionMatrix(myData, 10, rounds="all")
decision_matrix(myData, 9, rounds=list(a=1:3))
decisionMatrix(myData, 9, rounds=list(a=1:3))
decisionMatrix(myData, 9, rounds=list(a=1:8))
decisionMatrix(myData, 9, rounds=list(a=1:3))
decisionMatrix(myData, 9:10, rounds=list(a=1:3))
decisionMatrix(myData, 9:10, rounds=list(a=1:3, b=1:2))
is.char("all")
?is.vector
is.character("all")
is.character(1:3)
is.character(list(a = "a"))
is.character(list(a = 1:3))
!is.char("all")
!is.character("all")
!is.character(1:3)
is.vector("all")
devtools::load_all(".")
decisionMatrix(myData, 9:10, rounds=list(a=1:3, b=1:2))
devtools::load_all(".")
devtools::load_all(".")
is.character(NULL)
devtools::load_all(".")
devtools::load_all(".")
decisionMatrix(myData, 9:10, rounds=list(a=1:3, b=1:2))
decisionMatrix(myData, 9:10, rounds=list(a=1:3))
decisionMatrix(myData, 9:10, rounds=list(a=1:6))
decisionMatrix(myData, 9:10, rounds=list(a=1))
decisionMatrix(myData, 9:10, rounds=1:3
))
decisionMatrix(myData, 9:10, rounds=1:3)
devtools::load_all(".")
devtools::load_all(".")
decisionMatrix(myData, 9:10, rounds=1:8)
devtools::load_all(".")
decisionMatrix(myData, 9:10, rounds=1:8)
devtools::load_all(".")
decisionMatrix(myData, 9:10, rounds=1:8)
devtools::load_all(".")
decisionMatrix(myData, 9:10, rounds=1:8)
devtools::load_all(".")
decisionMatrix(myData, 9:10, rounds=1:8)
devtools::load_all(".")
?decision_matrix
devtools::load_all(".")
?decision_matrix
?gain_matrix()
library(productConfig)
?gain_matrix()
?gain_matrix
help(gain_matrix)
?gain_matrix
?as.list
?gain_matrix
?gain_matrix
library(roxygen2)
?gain_matrix
