standardDeviation(dm9norm)
weight.entropy(myData, 9, rounds="all")
differenceToIdeal(dm9norm, attr=1:4)
dm9
devtools::load_all(".")
weight.standard(myData, 9, rounds="all")
weight.standard(myData, all.users, rounds="all")
devtools::load_all(".")
weight.standard(myData, 9, rounds="all")
standardDeviation(d9norm)
standardDeviation(dm9norm)
weight.standard(myData, 9, rounds="all", cost_ids = 4)
d9norm
normalize(myData, 9, rounds="all", cost_ids = 4)
d9
dm9
normalize(dm9)
normalize.altMethod(dm9)
dm9norm
weight.standard(myData, all.users, rounds="all", cost_ids=4)
weight.differenceToIdeal(myData, all.users, rounds="all", cost_ids=4)
weight.standard(myData, all.users, rounds="all", cost_ids=4)
weight.entropy(myData, all.users, rounds="all", cost_ids=4)
decisionMatrix(myData, 14, rounds="all")
devtools::load_all(".")
devtools::load_all(".")
dm9
normalize.minMax(dm9)
devtools::load_all(".")
normalize.minMax(dm9)
normalize.minMax(dm9, cost_ids=4)
normalize.minMax(dm9, attr = 1:4,cost_ids=4)
devtools::load_all(".")
normalize.minMax(dm9, attr = 1:4,cost_ids=4)
dm9
devtools::load_all(".")
weight.entropy(myData, all.users, rounds="all", cost_ids=4)
weight.entropy(myData, all.users, rounds="all")
devtools::load_all(".")
weight.differenceToIdeal(myData, all.users, rounds="all", cost_ids=4)
weight.differenceToIdeal(myData, all.users, rounds="all")
devtools::load_all(".")
normalize.minMax(dm9, attr = 1:4,cost_ids=4)
normalize.minMax(dm9, attr = 1:4)
dm99 <- decisionMatrix(myData,9)
dm99
dm99 <- decisionMatrix(myData,9)[[1]]
dm99
normalize.minMax(dm99, attr = 1:4)
dm99 <- decisionMatrix(myData,9, rounds="all")[[1]]
dm99
normalize.minMax(dm99, attr = 1:4, cost_ids=4)
normalize.altMethod(dm99, attr = 1:4, cost_ids=4)
dm99alt <- normalize.altMethod(dm99, attr = 1:4, cost_ids=4)
dm99minMax <- normalize.minMax(dm99, attr = 1:4, cost_ids=4)
entropy(dm99alt)
weight.entropy(myData, 9, rounds="all", cost-ids=4)
weight.entropy(myData, 9, rounds="all", cost_ids=4)
entropy(dm99minMax)
weight.entropy(myData, all.users, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.entropy(myData, all.users, rounds="all", cost_ids=4)
devtools::load_all(".")
dm9
normalize.minMax(dm9)
devtools::load_all(".")
normalize.minMax(dm9)
?apply
devtools::load_all(".")
normalize.minMax(dm9)
dm9
?apply
?"/"
devtools::load_all(".")
normalize.minMax(dm9)
weight.entropy(myData, all.users, rounds="all", cost_ids=4)
weight.standard(myData, all.users, rounds="all", cost_ids=4)
weight.differenceToIdeal(myData, all.users, rounds="all", cost_ids=4)
devtools::load_all(".")
devtools::load_all(".")
weight.differenceToIdeal(myData, all.users, rounds="all", cost_ids=4)
weight.entropy(myData, all.users, rounds="all", cost_ids=4)
dm9
weight.entropy(myData, 9, rounds="all", cost_ids=4)
weight.differenceToIdeal(myData, 9, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.standard(myData, 9, rounds="all", cost_ids=4)
weight.standard(myData, all.users, rounds="all", cost_ids=4)
devtools::load_all(".")
getAttrValues(myData)
dm9
normalize.altMethod(dm9)
normalize.altMethod(dm9,1:4, cost_ids=4)
devtools::load_all(".")
weight.differenceToIdeal(myData,9, rounds="all", cost_ids)
weight.differenceToIdeal(myData,9, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.differenceToIdeal(myData,9, rounds="all", cost_ids=4)
lapply(getAttrValues(myData, 1:4, max))
lapply(getAttrValues(myData, max,  1:4))
lapply(getAttrValues(myData), max,  1:4))
lapply(getAttrValues(myData), max,  1:4)
lapply(getAttrValues(myData), max)
lapply(getAttrValues(myData, 1:4), max)
lapply(getAttrValues(myData, 1:4), max)
lapply(getAttrValues(myData, 1:4), min)
get_attr_values(myData)
get_attr_values(myData, 1:4)
get_attr_values(myData, 1)
dm9
c(1,3)
rbind(c(1,3),2:3)
class(rbind(c(1,3),2:3))
testM <- rbind(c(1,3),2:3)
rbind(testM, testM, testM)
testM <- rbind(testM, testM, testM)
testM[-1,]
testM[-1:2,]
testM[-c(1,2),]
lapply(getAttrValues(myData, 1:4), max)
sapply(getAttrValues(myData, 1:4), max)
sapply(getAttrValues(myData, 4:1), max)
maxmax <- sapply(getAttrValues(myData, 4:1), max)
minmin <- sapply(getAttrValues(myData, 4:1), min)
maxmax
minmin
dm9
dm9binded <- rbind(maxmax, minmin, dm9)
dm9binded
?rbind
minmin <- sapply(getAttrValues(myData, 1:4), min)
minmin <- sapply(getAttrValues(myData, 1:4), min)
dm9binded <- rbind(maxmax, minmin, dm9)
dm9binded
maxmax <- sapply(getAttrValues(myData, 1:4), max)
dm9binded <- rbind(maxmax, minmin, dm9)
dm9binded
devtools::load_all(".")
weight.highestValue(myData, 9:10, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, 9:10, rounds="all")
?sapply
devtools::load_all(".")
weight.highestValue(myData, 9:10, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, 9:10, rounds="all")
sapply(getAttrValues(myData, 1:4), min, USE.NAMES = T)
weight.highestValue(myData, 9:12, rounds="all")
weight.highestValue(myData, 9:12, rounds="first")
matrix(1,3,3,)
matrix(1,3,3)
matrix(1,3,4)
weight.highestValue(myData, 9:10, rounds="all")
devtools::load_all(".")
dm9
normalize.highestValue(dm9)
devtools::load_all(".")
normalize.highestValue(dm9)
dm9nocost <- decision_matrix(myData,9,rounds="all")
dm9nocost
normalize.highestValue(dm9nocost)
normalize.highestValue(dm9nocost, cost_ids = 4)
normalize.highestValue(dm9nocost, 4)
devtools::load_all(".")
normalize.highestValue(dm9nocost, 4)
normalize.highestValue(dm9nocost)
devtools::load_all(".")
normalize.highestValue(dm9nocost)
dm9binded
maxmax
minmin
dm9binded <- rbind(maxmax, minmin, dm9nocost)
dm9binded
devtools::load_all(".")
normalize.highestValue(dm9nocost)
normalize.highestValue(dm9binded)
normalize.highestValue(dm9binded, 4)
normalize.highestValue(dm9binded)
normalize.highestValue(dm9binded, 1:4, 4)
devtools::load_all(".")
normalize.highestValue(dm9binded, 1:4, 4)
devtools::load_all(".")
normalize.highestValue(dm9binded, 1:4, 4)
devtools::load_all(".")
normalize.highestValue(dm9binded, 1:4, 4)
normalize.highestValue(dm9binded)
normalize.highestValue(dm9binded)
dm9binded
normalize.highestValue(dm9binded, 1:4, 4)
weight.highestValue(myData, 9, attr=1:4, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.highestValue(myData, 9, attr=1:4, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.highestValue(myData, 9, attr=1:4, rounds="all", cost_ids=4)
weight.highestValue(myData, 9:10, attr=1:4, rounds="all", cost_ids=4)
decisionMatrix(myData, 10)
weight.highestValue(myData, 9:10, attr=1:3, rounds="all", cost_ids=4)
weight.highestValue(myData, 9:10, attr=1:3, rounds="all", cost_ids=3)
devtools::load_all(".")
weight.highestValue(myData, 9:10, attr=1:3, rounds="all", cost_ids=4)
weight.highestValue(myData, 9:10, attr=1:3, rounds="all", cost_ids=3)
weight.highestValue(myData, 9:10, attr=1:3, rounds="first", cost_ids=3)
devtools::load_all(".")
weight.highestValue(myData, 9:10, attr=1:3, rounds="first", cost_ids=3)
weight.highestValue(myData, 9:10, attr=1:3, rounds="first", cost_ids=3)
weight.highestValue(myData, 9:10, attr=1:3, rounds="all", cost_ids=3)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
weight_higher_sum_value(myData, 9, rounds="all")
getAttrWeights(myData, 9, rounds="all")
devtools::load_all(".")
getAttrWeights(myData, 9, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, all.users, attr=1:4, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.highestValue(myData, 9, attr=1:3, rounds="first", cost_ids=3)
weight.highestValue(myData, 10, attr=1:3, rounds="first", cost_ids=3)
weight.highestValue(myData, 10, attr=1:3, rounds="all", cost_ids=3)
dm10norm <- weight.highestValue(myData, 10, attr=1:3, rounds="all", cost_ids=4)[[1]]
dm10norm <- weight.highestValue(myData, 10, attr=1:4, rounds="all", cost_ids=4)[[1]]
dmnorm10
dm10norm
highestValue(dm10norm)
decisionMatrix(myData, 10, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, 10, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, 10, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, 10, rounds="all")
weight.highestValue(myData, 10, rounds="all", cost_ids = 4)
weight.highestValue(myData, 10, attr=1:4,rounds="all", cost_ids = 4)
weight.highAndStandard(myData, 10, attr=1:4,rounds="all", cost_ids = 4)
devtools::load_all(".")
devtools::load_all(".")
weight.highAndStandard(myData, 10, attr=1:4,rounds="all", cost_ids = 4)
weight.highestValue(myData, 10, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highestValue(myData, 10, rounds="all", cost_ids = 4)
weight.highestValue(myData, 10, attr=1:4 rounds="all", cost_ids = 4)
weight.highestValue(myData, 10, attr=1:4, rounds="all", cost_ids = 4)
weight.highestValue(myData, 10, rounds="all", cost_ids = 4)
get_attrs_ID(myData)
devtools::load_all(".")
weight.highestValue(myData, 10, rounds="all", cost_ids = 4)
weight.highestValue(myData, all.users, rounds="all", cost_ids = 4)
weight.highestValue(myData, all.users, rounds="all")
weight.highestValue(myData, all.users, rounds="all", gamma=0.8)
weight.highestValue(myData, all.users, rounds="all")
weight.highestValue(myData, all.users, rounds="all",cost_ids = 4)
devtools::load_all(".")
decisionMatrix(myData, 58:63, rounds="all",cost_ids = 4)
weight.highestValue(myData, all.users, rounds="all",cost_ids = 4)
devtools::load_all(".")
weight.highestValue(myData, all.users, rounds="all",cost_ids = 4)
devtools::load_all(".")
weight.highestValue(myData, all.users, rounds="all",cost_ids = 4)
devtools::load_all(".")
devtools::load_all(".")
weight.highestValue(myData, all.users, rounds="all",cost_ids = 4)
devtools::load_all(".")
weight.highestValue(myData, all.users, rounds="all",cost_ids = 4)
weight.highestValue(myData, all.users, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, all.users, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, all.users, rounds="all")
weight.highestValue(myData, all.users, rounds="all", cost_ids = 4)
weight.highestValue(myData, all.users, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highestValue(myData, 61:62, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highestValue(myData, 61:62, rounds="all", cost_ids = 4)
devtools::load_all(".")
devtools::load_all(".")
weight.highAndStandard(myData, 61:62, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highAndStandard(myData, 61:62, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highAndStandard(myData, 61:62, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highAndStandard(myData, 61:62, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highAndStandard(myData, 61:62, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highAndStandard(myData, 61:62, rounds="all", cost_ids = 4)
weight.highAndStandard(myData, 6, rounds="all", cost_ids = 4)
weight.highAndStandard(myData, all.users, rounds="all", cost_ids = 4)
weight.highAndStandard(myData, all.users, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, 61:62, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highestValue(myData, 61:62, rounds="all", cost_ids = 4)
weight.highestValue(myData, 61:62, rounds="all", cost_ids = 4)
weight.highestValue(myData, 61:62, attr=1:4, rounds="all", cost_ids = 4)
weight.highestValue(myData, 61:62, attr=1:3, rounds="all", cost_ids = 4)
weight.highestValue(myData, 61:62, attr=1:3, rounds="all")
weight.highestValue(myData, 61:62, attr=2:4, rounds="all", cost_ids = 4)
weight.highestValue(myData, 61:62, attr=1:4, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highestValue(myData, 61:62, attr=1:4, rounds="all", cost_ids = 4)
weight.highestValue(myData, 61:62, attr=2:4, rounds="all", cost_ids = 4)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
trp10.13
trpValueMatrix(myData, 9:10, rounds="all")
decisionMatrix(myData, 9:10, rounds="all")
devtools::load_all(".")
trpValueMatrix(myData, 9:10, rounds="all")
trpValueMatrix(myData, 9:10, rounds="all")
decisionMatrix(myData, 9:10, rounds="all")
devtools::load_all(".")
trpValueMatrix(myData, 9:10, rounds="all")
trpValueMatrix(myData, 10, rounds="all")
decisionMatrix(myData, 10, rounds="all")
decisionMatrix.oneAttr(myData, 10, rounds="all", attr=1)
trpValueMatrix.oneAttr(myData, 10, rounds="all", attr=1)
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, 10, rounds="all", attr=1)
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, 10, rounds="all", attr=1)
decisionMatrix(myData, 10, rounds="all", attr=1)
trpValueMatrix.oneAttr(myData, 10, rounds="all", attr=1)
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, 10, rounds="all", attr=1)
trpValueMatrix(myData, 10, rounds="all", attr=1, cost_ids=4)
trpValueMatrix(myData, 10, rounds="all", attr=1)
trpValueMatrix(myData, 10, rounds="all")
devtools::load_all(".")
trpValueMatrix(myData, 10, rounds="all")
devtools::load_all(".")
trpValueMatrix(myData, 10, rounds="all")
devtools::load_all(".")
trpValueMatrix(myData, 10, rounds="all")
devtools::load_all(".")
trpValueMatrix(myData, 10, rounds="all")
devtools::load_all(".")
trpValueMatrix(myData, 10, rounds="all")
library(productConfig)
?trp
?trpValueMatrix
devtools::load_all(".")
devtools::load_all(".")
trpValueMatrix(myData, 10, rounds="all")
source('C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/R/GainsAndLosses.R')
?apply
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/new_BA.RData")
View(aa)
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/new_BA.RData")
aa
aaa
dm10
camera_data <- myData
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
save.image("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/BAFiles/knit_data.RData")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(norm.gainLoss)
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/BAFiles/knit_data.RData")
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/new_BA.RData")
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/BAFiles/knit_data.RData")
save.image("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/BAFiles/knit_data.RData")
round(1.111111, 2)
lapply(getAttrValues(dataset = camera_data), round, 8)
lapply(getAttrValues(dataset = camera_data), round, 7)
lapply(getAttrValues(dataset = camera_data), round, 8)
sample(all.users, 1)
decisionMatrix(camera_data,52)
decisionMatrix(camera_data,sample(all.users, 1))
decisionMatrix(camera_data,sample(all.users, 1))
decisionMatrix(camera_data,sample(all.users, 1))
decisionMatrix(camera_data,sample(all.users, 1))
devtools::load_all(".")
overallPV(camera_data, 33, attr=1:4, rounds="all", cost_ids = 4, weightFUN="entropy",
alpha = 0.88, beta=0.88, lambda=2.25)
overallPV(camera_data, 33, rounds="all", cost_ids=4, weightFUN ="entropy")
load("U:/Development/productConfig/new_BA.RData")
overallP(myData, 33, rounds="all", cost_ids=4, weightFUN ="entropy")
devtools::load_all(".")
overallPV(myData, 33, rounds="all", cost_ids=4, weightFUN ="entropy")
3 != 3
3 != 4
length(attr) > 1
2 > 1
someMatrix
dim(someMatrix)
2:4 == c(2,3,4)
?anxy
?any
any(2:4 == c(2,3,4))
any(!dim(someMatrix) != c(2,4))
any(!dim(someMatrix) != c(2,5))
any(!(dim(someMatrix) != c(2,4)))
any(!(dim(someMatrix) != c(2,5)))
any(!(dim(someMatrix) != c(4,5)))
?all
all(!(dim(someMatrix) != c(4,5)))
all(!(dim(someMatrix) != c(2,5)))
all(!(dim(someMatrix) != c(2,6)))
all(!(dim(someMatrix) != c(2,4)))
all(!(dim(someMatrix) != c(4,2)))
devtools::load_all(".")
devtools::load_all(".")
trpValueMatrix(myData, 9, attr=1:3, rounds="all", cost_ids=4)
trp.ValueMatrix(myData, 9, attr=1:3, rounds="all", cost_ids=4. tri.refps=matrix(2.5,3,3))
trp.ValueMatrix(myData, 9, attr=1:3, rounds="all", cost_ids=4, tri.refps=matrix(2.5,3,3))
trp.valueMatrix(myData, 9, attr=1:3, rounds="all", cost_ids=4, tri.refps=matrix(2.5,3,3))
matrix(1:9,3,3)
trp.valueMatrix(myData, 9, attr=1:3, rounds="all", cost_ids=4, tri.refps=matrix(1:9,3,3))
devtools::load_all(".")
trp.valueMatrix(myData, 9, attr=1:3, rounds="all", cost_ids=4, tri.refps=matrix(1:9,3,3))
devtools::load_all(".")
devtools::load_all(".")
trp.valueMatrix(myData, 9, attr=1:3, rounds="all", cost_ids=4, tri.refps=matrix(1:9,3,3))
devtools::load_all(".")
trp.valueMatrix(myData, 9, attr=1:3, rounds="all", cost_ids=4, tri.refps=matrix(1:9,3,3))
trpValueMatrix(myData, 9, attr=1:3, rounds="all", cost_ids=4, mr=1, sq=4, g=7)
trpValueMatrix(myData, 9, attr=1:4, rounds="all", cost_ids=4, mr=1, sq=4, g=7)
devtools::load_all(".")
trp.valueMatrix(myData, 9, attr=1:3, rounds="all", cost_ids=4, tri.refps=matrix(1:9,3,3))
trpValueMatrix(myData, 9, attr=1:3, rounds="all", cost_ids=4)
trp.valueMatrix(myData, 9, attr=1:3, rounds="all", cost_ids=4, tri.refps=matrix(c(0.5,1.5,2.5, 1,4,7),3,3))
?matrix
trp.valueMatrix(myData, 9, attr=1:3, rounds="all", cost_ids=4, tri.refps=matrix(c(0.5,1.5,2.5, 1,4,7),3,3, byrow = T))
matrix(c(0.5,1.5,2.5, 1,4,7),3,3, byrow = T)
matrix(c(0.5,1.5,2.5),3,3, byrow = T)
triRefps13 <- matrix(c(0.5,1.5,2.5),3,3, byrow = T)
trp.valueMatrix(myData, 9, attr=1:3, rounds="all", cost_ids=4, tri.refps=triRefps13)
trpValueMatrix(myData, 9, attr=1:3, rounds="all", cost_ids=4)
trpValueMatrix(myData, 9, attr=1:3, rounds="all")
trpValueMatrix(myData, 9, attr=4, rounds="all", cost_ids=4)
trpValueMatrix(myData, 9, attr=4, rounds="all", cost_ids=4, mr=0.40, sq=0.17, g=-0.10)
trp10.full
trpValueMatrix(myData, 10, attr=4, rounds="all", cost_ids=4, mr=0.40, sq=0.17, g=-0.10)
trpValueMatrix(myData, 10, attr=4, rounds="all", cost_ids=4)
trpValueMatrix(myData, 10, attr=1:3, rounds="all", cost_ids=4)
trpValueMatrix(myData, 10, attr=4, rounds="all")
trpValueMatrix(myData, 10, attr=1:3, rounds="all", cost_ids=4)
trpValueMatrix(myData, 10, attr=4, rounds="all", cost_ids=4, mr=0.40, sq=0.17, g=-0.10)
trp10.full
triRefps14 <- rbind(triRefps13, c(0.40,0.17,-0.10)
)
triRefps14
trp.valueMatrix(myData, 9, attr=1:4, rounds="all", cost_ids=4, tri.refps=triRefps14)
trp.valueMatrix(myData, 9, attr=1:4, rounds="all", tri.refps=triRefps14)
trp.valueMatrix(myData, 10, attr=1:4, rounds="all", tri.refps=triRefps14)
trp.valueMatrix(myData, 10, attr=1:4, rounds="all", cost_ids = 4, tri.refps=triRefps14)
devtools::load_all(".")
trp.valueMatrix(myData, 10, attr=1:4, rounds="all", cost_ids = 4, tri.refps=triRefps14)
devtools::load_all(".")
trp.valueMatrix(myData, 10, attr=1:4, rounds="all", cost_ids = 4, tri.refps=triRefps14)
devtools::load_all(".")
trp.valueMatrix(myData, 10, attr=1:4, rounds="all", cost_ids = 4, tri.refps=triRefps14)
trp.valueMatrix(myData, 10, attr=1:4, rounds="all", tri.refps=triRefps14)
devtools::load_all(".")
trp.valueMatrix(myData, 10, attr=1:4, rounds="all", tri.refps=triRefps14)
trp.valueMatrix(myData, 10, attr=1:4, rounds="all", cost_ids = 4, tri.refps=triRefps14)
trp10.full
devtools::load_all(".")
trp.valueMatrix(myData, 10, attr=1:4, rounds="all", cost_ids = 4, tri.refps=triRefps14)
dual10.full
devtools::load_all(".")
dual.valueMatrix(myData, 10, attr=1:3, rounds="all", dual.refps = c(1.5,2.5))
devtools::load_all(".")
dual.valueMatrix(myData, 10, attr=1:3, rounds="all", dual.refps = c(1.5,2.5))
dual.valueMatrix(myData, 10, attr=1:3, rounds="all", dual.refps = matrix(c(1.5,2.5),3,2,byrow=F)
)
dual.valueMatrix(myData, 10, attr=1:3, rounds="all", dual.refps = matrix(c(1.5,2.5),3,2, byrow=T)
)
devtools::load_all(".")
dual.valueMatrix(myData, 10, attr=1:3, rounds="all", dual.refps = matrix(c(1.5,2.5),3,2, byrow=T)
)
dual10.13
dualValueMatrix(myData, 10, attr=1:3, rounds="all", dual.refps =c(1.5,2.5))
dualValueMatrix(myData, 10, attr=1:3, rounds="all", cost_ids=4, dual.refps =c(1.5,2.5))
dualValueMatrix(myData, 10, attr=4, rounds="all", cost_ids=4, dual.refps =c(1.5,2.5))
dualValueMatrix(myData, 10, attr=4, rounds="all", cost_ids=4, dual.refps =c(2.5,2.5))
dualValueMatrix(myData, 10, attr=4, rounds="all", cost_ids=4, dual.refps =c(2.5,1.5))
dualValueMatrix(myData, 10, attr=4, rounds="all", cost_ids=4, dual.refps =c(2.5,1.5))
dualValueMatrix(myData, 10, attr=4, rounds="all", cost_ids=3, dual.refps =c(2.5,1.5))
dualValueMatrix(myData, 10, attr=4, rounds="all", cost_ids=2, dual.refps =c(2.5,1.5))
dualValueMatrix(myData, 10, attr=1:3, rounds="all", cost_ids=4, dual.refps =c(2.5,1.5))
dualValueMatrix(myData, 10, attr=1:4, rounds="all", cost_ids=4, dual.refps =c(2.5,1.5))
dualValueMatrix(myData, 10, attr=1:4, rounds="all",  dual.refps =c(2.5,1.5))
devtools::load_all(".")
dualValueMatrix(myData, 10, attr=1:4, rounds="all",  dual.refps =c(2.5,1.5))
dual.valueMatrix(myData, 10, attr=1:3, rounds="all", dual.refps = matrix(c(1.5,2.5),3,2, byrow=T)
)
dualValueMatrix(myData, 10, attr=1:4, rounds="all",  dual.refps =c(1.5,2.5))
dual.valueMatrix(myData, 10, attr=1:3, rounds="all", dual.refps = matrix(c(1.5,2.5),3,2, byrow=T))
devtools::load_all(".")
dual.valueMatrix(myData, 10, attr=1:3, rounds="all", dual.refps = matrix(c(1.5,2.5),3,2, byrow=T))
pvMatrix(myData, 10, attr=1:3, refps = c(1.5,1.5,1.5))
pvMatrix(myData, 10, attr=1:3, refps = c(1.5,1.5,1.5,NA))
pvMatrix(myData, 10, attr=1:3, rounds="all", refps = c(1.5,1.5,1.5,NA))
dual.valueMatrix(myData, 10, attr=1:3, rounds="all", dual.refps = matrix(c(1.5,2.5),3,2, byrow=T))
dualRefps13 <- matrix(c(1.5,2.5),3,2, byrow=T)
save.image("U:/Development/productConfig/testDataNewDRPandTRP.RData")
install.packages("devtools")
library(devtools)
