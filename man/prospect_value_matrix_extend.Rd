% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ProspectValueFunctions.R
\name{prospect_value_matrix_extend}
\alias{prospect_value_matrix_extend}
\title{Calculate Value Matrix}
\usage{
prospect_value_matrix_extend(ngain = NULL, nloss = NULL, alpha = 0.88,
  beta = 0.88, lambda = 2.25)
}
\arguments{
\item{ngain}{normalized gain matrix}

\item{nloss}{normalized loss matrix}

\item{alpha}{numeric between [0, 1]. Determines the concativity of the value
function as given by the value function[1].}

\item{beta}{numeric between [0, 1]. Determines the convexity of the value
function as given by the value function[1]}

\item{lambda}{lambda > 1. Parameter of loss aversion for the value function
as given by the value function[1].}
}
\value{
the value matrix
}
\description{
Parting from entered normalized gain and loss matrices, this function
calculates the value matrix with the value function from Prospect Theory
(Reference[1]). It differs from other functions in this package in that it
does not take all parameters into account. Yo need to pre-calculate the
matrices. See Details.
}
\details{
You need to pre-calculate the normalized gain and loss matrices, for
example with \code{\link{norm_g_l_matrices}} and give them as a parameter.
This is one of the few functions of this package that do not allow you to
give the raw data from your product Configurator, but rather calculate a
previous result.

In normal cases we recommend the use of \code{\link{pvalue_matrix}} and
\code{\link{powerful_function}}for more users at once. This is mainly an
auxiliary function.
}
\examples{
prospect_value_matrix_extend(my_ngain, my_nloss)
prospect_value_matrix_extend(ngain = matrix1, nloss = matrix2, alpha = 0.95)

\dontrun{prospect_value_matrix_extend(my_full_data)}

}
\seealso{
\code{\link{pvalue_matrix}}

Other prospect value functions: \code{\link{overall_pv_extend}},
  \code{\link{overall_pv}}, \code{\link{pvalue_matrix}}
}

