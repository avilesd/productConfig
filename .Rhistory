dualLossAversionFun(matrix(16:31, 4, 4), matrix(51:26, 4, 4))
devtools::load_all(".")
dualLossAversionFun(matrix(16:31, 4, 4), matrix(51:36, 4, 4))
getTableById(myData, 9)
get_table_by_ID(myData, 9)
getTableById(myData, 9)[[1]]
getAllUserIds(my)
getAllUserIds(myData)
getDefaultRefps(myData, 9)
get_all_default_rps(myData, 9)
getDefaultRefps(myData, 9)[[1]]
getAttrValues(myData, 1:4)
get_attr_values(myData, 1:4)
get_attr_values(myData, 1)
warnings()
get_attr_values(myData, 4)
get_attr_values(myData, 4:5)
devtools::load_all(".")
catchCommonErrors(myData, 9)
catchCommonErrors(myData, 9, attr=4)
catchCommonErrors(myData, 9, attr=5)
system.time(replicate(100, catchCommonErrors(myData, 9)))
system.time(replicate(1000, catchCommonErrors(myData, 9)))
system.time(replicate(10000, catchCommonErrors(myData, 9)))
system.time(replicate(100, trpValueMatrix(myData, 9:11, rounds="all", cost_ids=4)))
system.time(replicate(100, trpValueMatrix(myData, 9:11, rounds="all")))
fillMatrix <- c(3.0, 2.5, 1.8, 2.2, 1.0, 0.8, 0.5, 0.7, 1.0, 0.8, 2.0, 1.2, 70, 50, 110, 90)
someMatrix <- matrix(fillMatrix, 4,4 )
someMatrix
devtools::load_all(".")
devtools::load_all(".")
differenceToIdeal(someMatrix)
devtools::load_all(".")
differenceToIdeal(someMatrix)
devtools::load_all(".")
differenceToIdeal(someMatrix)
devtools::load_all(".")
devtools::load_all(".")
differenceToIdeal(someMatrix)
devtools::load_all(".")
rm(c(2), c(23,4,5,2))
devtools::load_all(".")
differenceToIdeal(someMatrix, attr = 1:4, cost_ids= c(1,3))
devtools::load_all(".")
differenceToIdeal(someMatrix, attr = 1:4, cost_ids= c(1,3))
devtools::load_all(".")
differenceToIdeal(someMatrix, attr = 1:4, cost_ids= c(1,3))
devtools::load_all(".")
devtools::load_all(".")
differenceToIdeal(someMatrix, attr = 1:4, cost_ids= c(1,3))
devtools::load_all(".")
differenceToIdeal(someMatrix, attr = 1:4, cost_ids= c(1,3))
devtools::load_all(".")
differenceToIdeal(someMatrix, attr = 1:4, cost_ids= c(1,3))
someMatrix[1:3]
someMatrix[,1:3]
devtools::load_all(".")
differenceToIdeal(someMatrix, attr = 1:4, cost_ids= c(1,3))
devtools::load_all(".")
differenceToIdeal(someMatrix, attr = 1:4, cost_ids= c(1,3))
devtools::load_all(".")
differenceToIdeal(someMatrix, attr = 1:4, cost_ids= c(1,3))
someMatrix[, c(1,3)]
devtools::load_all(".")
differenceToIdeal(someMatrix, attr = 1:4, cost_ids= c(1,3))
devtools::load_all(".")
differenceToIdeal(someMatrix, attr = 1:4, cost_ids= c(1,3))
devtools::load_all(".")
devtools::load_all(".")
normalize.altMethod(someMatrix, attr = 1:4, cost_ids= c(1,3))
normMat <- normalize.altMethod(someMatrix, attr = 1:4, cost_ids= c(1,3))
differenceToIdeal(normMat)
1/differenceToIdeal(normMat)
devtools::load_all(".")
differenceToIdeal(normMat)
differenceToIdeal(normMat)
normMat
someMatrix
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:5, rounds="all", cost_ids=4)
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="alls", cost_ids=4)
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=4)
decisionMatrix(myData, 9, attr =1:4, rounds="all", cost_ids=4)
devtools::load_all(".")
decisionMatrix(myData, 9, attr =1:4, rounds="all", cost_ids=4)
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=4)
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=3:4)
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=3:4)
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=3:4)
normalize.altMethod(someMatrix)
normalize.altMethod(someMatrix,c(2,4), c(1,3))
normalize.altMethod(someMatrix,c(2,4), c(1))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all")
weight.differenceToIdeal(myData, 9, rounds="all")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all")
normalize.altMethod(someMatrix,c(2,4), c(1))
normalize.altMethod(someMatrix,c(2,4), c(1,3))
normalize.altMethod(someMatrix,c(1,2,3,4), c(1,3))
devtools::load_all(".")
normalize.altMethod(someMatrix,c(1,2,3,4), c(1,3))
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=4)
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(3,4))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(3,4))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(3,4))
weight.differenceToIdeal(myData, 9, attr =c(2,4), rounds="all", cost_ids=c(3,4))
weight.differenceToIdeal(myData, 9, attr =c(2,4), rounds="all", cost_ids=c(1,3))
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
benefitAttr <- c(1,2,3,4)[!c(1,2,3,4) %in% c(1,3)]
benefitAttr
rm(benefitAttr)
devtools::load_all(".")
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
1/0
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
weight.differenceToIdeal(myData, 63, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
weight.differenceToIdeal(myData, 63, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
weight.differenceToIdeal(myData, 63, attr =1:4, rounds="all", cost_ids=c(1,3))
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
weight.differenceToIdeal(myData, 63, attr =1:4, rounds="all", cost_ids=c(1,3))
devtools::load_all(".")
weight.differenceToIdeal(myData, 63, attr =1:4, rounds="all", cost_ids=c(1,3))
dm63 <- decisionMatrix(myData, 9, rounds="all", cost_ids = 4)
norm.dm63 <- normalize.altMethod(norm.dm63, 1:4, 4)
norm.dm63 <- normalize.altMethod(dm63, 1:4, 4)
devtools::load_all(".")
norm.dm63 <- normalize.altMethod(dm63, 1:4, 4)
dm63
dm63 <- decisionMatrix(myData, 63, rounds="all")
dm63
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
normalize.altMethod(dm63[[1]])
dm63
devtools::load_all(".")
normalize.altMethod(dm63[[1]])
devtools::load_all(".")
normalize.altMethod(dm63[[1]])
oneVector <- normalize.altMethod(dm63[[1]])
differenceToIdeal(oneVector)
differenceToIdeal(oneVector, 1:4)
differenceToIdeal(oneVector, 1:5)
devtools::load_all(".")
someMatrix1col <- someMatrix[,1]
someMatrix10_13
someMatrix1col
someMatrix10_13[[1]]
normalize.altMethod(someMatrix10_13[[1]], attr = 1:4, cost_ids = 1)
someMatrix10_13[[1]]
aa <- someMatrix10_13[[1]]
apply(aa[,1], 2, function(t) { a_max <- max(t); a_min <- min(t);
if (a_max ==  a_min) {res <- t/a_max}
else {res <- (a_max-t)/(a_max-a_min)}; res})
dim(a)
dim(aa)
aa[,1] <- someMatrix10_13[[,1]]
aa[,1] <- someMatrix1col[,1]
aa
aa[,1]
someMatrix1col[,1]
someMatrix1col
apply(aa[,1], 2, function(t) { a_max <- max(t); a_min <- min(t);
if (a_max ==  a_min) {res <- t/a_max}
else {res <- (a_max-t)/(a_max-a_min)}; res})
apply(aa[,1, drop = F], 2, function(t) { a_max <- max(t); a_min <- min(t);
if (a_max ==  a_min) {res <- t/a_max}
else {res <- (a_max-t)/(a_max-a_min)}; res})
devtools::load_all(".")
normalize.altMethod(someMatrix10_13[[1]], attr = 1:4, cost_ids = 1)
devtools::load_all(".")
normalize.altMethod(someMatrix10_13[[1]], attr = 1:4, cost_ids = 1)
devtools::load_all(".")
normalize.altMethod(someMatrix1col, attr = 1:4, cost_ids = 1)
devtools::load_all(".")
normalize.altMethod(someMatrix1col, attr = 1:4, cost_ids = 1)
someMatrix1col
View(aa)
aa
normalize.altMethod(aa, attr = 1:4, cost_ids = 1)
devtools::load_all(".")
normalize.altMethod(aa, attr = 1:4, cost_ids = 1)
devtools::load_all(".")
normalize.altMethod(aa, attr = 1:4, cost_ids = 1)
devtools::load_all(".")
normalize.altMethod(aa, attr = 1:4, cost_ids = 1)
devtools::load_all(".")
normalize.altMethod(aa, attr = 1, cost_ids = 1)
devtools::load_all(".")
weight.differenceToIdeal(myData, 63, rounds="all")
dm63 <- (myData, 63, rounds="all")[[1]]
dm63 <- decisionMatrix(myData, 63, rounds="all")[[1]]
dm63
normalize.altMethod(dm63, 1:4)
aaa <- normalize.altMethod(dm63, 1:4)
differenceToIdeal(aaa, 1:4)
devtools::load_all(".")
weight.differenceToIdeal(myData, 63, rounds="all")
dm63
devtools::load_all(".")
devtools::load_all(".")
weight.differenceToIdeal(myData, 63, rounds="all")
devtools::load_all(".")
weight.differenceToIdeal(myData, 63, rounds="all")
devtools::load_all(".")
weight.differenceToIdeal(myData, 63, rounds="all")
weight.differenceToIdeal(myData, 63, rounds="all", cost_ids =1)
weight.differenceToIdeal(myData, 63, rounds="all", cost_ids =5)
weight.differenceToIdeal(myData, 63, rounds="all", attr = 1:5, cost_ids =)
weight.differenceToIdeal(myData, 63, rounds="all", attr = 1:5, cost_ids =)
weight.differenceToIdeal(myData, 63, rounds="all", attr = 1:4, cost_ids =)
weight.differenceToIdeal(myData, 63, rounds="all", attr = 1:4, cost_ids =2)
weight.differenceToIdeal(myData, 9, rounds="all", attr = 1:4, cost_ids =2)
weight.differenceToIdeal(myData, 9, rounds="all", attr = 1:4, cost_ids =)
weight.differenceToIdeal(myData, 9, rounds="all", attr = 1:4, cost_ids = 4)
decisionMatrix(myData, 9, rounds="all", attr = 1:4, cost_ids = 4)
any(FALSE, c(1,3,4))
any(FALSE, c(T,F,T))
any(FALSE, c(T,T,T))
any(c(T,T,T), F)
any(c(T,T,T))
any(c(4,2,2))
[cost_ids %in% attr]
devtools::load_all(".")
[5 %in% c(1,2,3,4)]
5 %in% c(1,2,3,4)
4 %in% c(1,2,3,4)
c(1,5) %in% c(1,2,3,4)
any(c(F,F))
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, rounds="all", attr = 1:4, cost_ids = 4)
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, rounds="all", attr = 1:4, cost_ids = 4)
4 %in% c(1,2,3,4)
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, rounds="all", attr = 1:4, cost_ids = 4)
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, rounds="all", attr = 1:4, cost_ids = 5)
weight.differenceToIdeal(myData, 9, rounds="all", attr = c(1,3,4), cost_ids = 5)
weight.differenceToIdeal(myData, 9, rounds="all", attr = c(1,3,4), cost_ids = 2)
attr[!c(1,3,4) %in% 2]
attr[!c(1,3,4) %in% c(2)]
weight.differenceToIdeal(myData, 9, rounds="all", attr = c(1,3,4), cost_ids = 2)
!c(1,3,4) %in% c(2)
weight.differenceToIdeal(myData, 9, rounds="all", attr = c(1,3,4), cost_ids = 3)
decisionMatrix(myData, 9, rounds="all", attr = c(1,3,4), cost_ids = 3)
devtools::load_all(".")
decisionMatrix(myData, 9, rounds="all", attr = c(1,3,4), cost_ids = 3)
decisionMatrix(myData, 9, rounds="all", attr = c(1,3,4), cost_ids = 2)
!all(2 %in% c(1,3,4))
weight.differenceToIdeal(myData, 9, rounds="all", attr = c(1,3,4), cost_ids = 3)
weight.differenceToIdeal(myData, 9, rounds="all", attr = c(1,3,4), cost_ids = 2)
weight.differenceToIdeal(myData, 9, rounds="all", attr = c(1,3,4), cost_ids = 3)
weight.differenceToIdeal(myData, 9, rounds="all", attr = c(1,3,4), cost_ids = 4)
devtools::load_all(".")
weight.differenceToIdeal(myData, 9, rounds="all", attr = c(1,3,4), cost_ids = 3)
weight.differenceToIdeal(myData, 9, rounds="all", attr = c(1,3,4), cost_ids = 3)
weight.differenceToIdeal(myData, 9, rounds="all", attr = c(1,3,4), cost_ids = 2)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/new_BA.RData")
weight.differenceToIdeal(myData, 9, rounds="first", attr = c(1,3,4), cost_ids = 2)
weight.differenceToIdeal(myData, 9, rounds="last", attr = c(1,3,4), cost_ids = 2)
weight.differenceToIdeal(myData, 90, rounds="last", attr = c(1,3,4), cost_ids = 2)
weight.differenceToIdeal(myData, all.users, rounds="last", attr = c(1,3,4), cost_ids = 2)
aMatrix
weight.differenceToIdeal(myData, all.users, rounds=, attr = c(1,3,4), cost_ids = 2)
weight.differenceToIdeal(myData, all.users, rounds="all", attr = c(1,3,4), cost_ids = 2)
warnings()
weight.differenceToIdeal(myData, all.users, rounds="all", attr = c(1,3,4), cost_ids = 3)
devtools::load_all(".")
weight.differenceToIdeal(myData, all.users, rounds="all", attr = c(1,3,4), cost_ids = 2)
weight.differenceToIdeal(myData, all.users, rounds="all", attr = c(1,3,4), cost_ids = 3)
weight.differenceToIdeal(myData, all.users, rounds="all", attr = c(1,2,3,4), cost_ids = 2)
weight.differenceToIdeal(myData, all.users, rounds="all", attr = c(1,2,3,4), cost_ids = 4)
decisionMatrix(myData, c(41,14), rounds="all", attr = c(1,2,3,4), cost_ids = 4)
decisionMatrix(myData, c(47,14,12), rounds="all", attr = c(1,2,3,4), cost_ids = 4)
weight.differenceToIdeal(myData, c(47,14,12), rounds="all", attr = c(1,2,3,4), cost_ids = 4)
devtools::load_all(".")
weight.differenceToIdeal(myData, c(47,14,12), rounds="all", attr = c(1,2,3,4), cost_ids = 4)
devtools::load_all(".")
weight.differenceToIdeal(myData, c(47,14,12), rounds="all", attr = c(1,2,3,4), cost_ids = 4)
NaN+1
devtools::load_all(".")
weight.differenceToIdeal(myData, c(47,14,12), rounds="all", attr = c(1,2,3,4), cost_ids = 4)
weight.differenceToIdeal(myData, c(47,14,12), rounds="all", attr = c(1,2,3,4), cost_ids = 4)
weight.differenceToIdeal(myData, c(47,14,12), rounds="all", attr = c(1,2,3,4), cost_ids = 4)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
weight.differenceToIdeal(myData, c(47,14,12), rounds="all", attr = c(1,2,3,4), cost_ids = 4)
devtools::load_all(".")
devtools::load_all(".")
weight.differenceToIdeal(myData, c(47,14,12), rounds="all", attr = c(1,2,3,4), cost_ids = 4)
weight.differenceToIdeal(myData, all.users, rounds="all", attr = c(1,2,3,4), cost_ids = 4)
devtools::load_all(".")
weight.differenceToIdeal(myData, all.users, rounds="all", attr = c(1,2,3,4), cost_ids = 4)
devtools::load_all(".")
getAttrWeights(myData, all.users, rounds="all", attr = c(1,2,3,4), cost_ids = 4, weightFUN="Test1" )
devtools::load_all(".")
getAttrWeights(myData, all.users, rounds="all", attr = c(1,2,3,4), cost_ids = 4, weightFUN="Test1" )
devtools::load_all(".")
getAttrWeights(myData, 9:12, rounds="all", attr = c(1,2,3,4), cost_ids = 4, weightFUN="Test1" )
devtools::load_all(".")
we912 <- getAttrWeights(myData, 9:12, rounds="all", attr = c(1,2,3,4), cost_ids = 4, weightFUN="differenceToIdeal" )
we912
trp10.full
we912 <- getAttrWeights(myData, 10, rounds="all", attr = c(1,2,3,4), cost_ids = 4, weightFUN="differenceToIdeal" )
we912
dep_we912 <- getAttrWeights(myData, 10, rounds="all", attr = c(1,2,3,4), cost_ids = 4, weightFUN="deprecated_FUN" )
we912
dep_we912
overallPV_interface(trp10.full, we912)
overallPV_interface(trp10.full, dep_we912)
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/new_BA.RData")
someMatrix
1-someMatrix
devtools::load_all(".")
devtools::load_all(".")
entropy(someMatrix)
sum(entropy(someMatrix))
.1
entropy_matrix1 <- matrix(.2353, .2941, .2118, .2588, .1875, .3375, .2500, .2250, .2532, .2278, .2658, .2532, .2558, .3023, .2093, .2326, .25, .15, .35, .25, .3462, .1923, .2692, .1923, 4, 6)
entropy_matrix1 <- matrix(c(.2353, .2941, .2118, .2588, .1875, .3375, .2500, .2250, .2532, .2278, .2658, .2532, .2558, .3023, .2093, .2326, .25, .15, .35, .25, .3462, .1923, .2692, .1923), 4, 6)
entropy_matrix1
entropy(entropy_matrix1)
devtools::load_all(".")
entropy(entropy_matrix1)
devtools::load_all(".")
entropy(entropy_matrix1)
devtools::load_all(".")
devtools::load_all(".")
entropy(entropy_matrix1)
devtools::load_all(".")
devtools::load_all(".")
entropy(entropy_matrix1)
res_entropy_m1 <- entropy(entropy_matrix1)
names(res_entropy_m1) <- c("w1", "w2", "w3", "w4","w5","w6",)
names(res_entropy_m1) <- c("w1", "w2", "w3", "w4","w5","w6")
res_entropy_m1
sort(res_entropy_m1)
sort(res_entropy_m1, decreasing = T)
res_entropy_m1
differenceToIdeal(entropy_matrix1)
differenceToIdeal(entropy_matrix1, 1:6)
diff_m1 <- differenceToIdeal(entropy_matrix1, 1:6)
names(diff_m1) <- c("w1", "w2", "w3", "w4","w5","w6")
diff_m1
res_entropy_m1
sort(diff_m1, decreasing = T)
sort(res_entropy_m1, decreasing = T)
View(myData)
overallPV(myData, all.users, rounds="all")
?ggplot2
?sum
save.image("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/new_BA.RData")
with0 <- entropy_matrix1
with0[1,4] <- 0
with0
entropy(with0)
devtools::load_all(".")
entropy(with0)
res_entropy_m1
sort(res_entropy_m1)
sort(res_entropy_m1, decreasing = T)
sort(entropy(with0), decreasing = T)
entropy0 <- entropy(with0)
names(entropy0) <- c("w1", "w2", "w3", "w4","w5","w6")
entropy0
sort(entropy(with0), decreasing = T)
sort(entropy0, decreasing = T)
sort(res_entropy_m1, decreasing = T)
with0[1,4] <- 0.1
entropy(with0)
oneCol <- with[,1]
oneCol <- with0[,1]
oneCol
oneCol <- with0[,1, drop = F]
oneCol
entropy(oneCol)
as.vector(oneCol)
oneVec<-as.vector(oneCol)
as.vector(oneVec)
entropy(oneVec)
dm1row <- decisionMatrix(9, round="first")
dm1row <- decisionMatrix(myData,9, round="first")
dm1row
entropy(dm1row[[1]])
dm1row[[1]]
devtools::load_all(".")
dm1row[[1]]
entropy(dm1row[[1]])
devtools::load_all(".")
entropy(dm1row[[1]])
devtools::load_all(".")
entropy(dm1row[[1]])
entropy(dm1row[1])
dm1row <- as.matrix(dm1row[[1]])
class(dm1row)
entropy(dm1row)
devtools::load_all(".")
entropy(dm1row)
entropy(entropy_matrix1)
devtools::load_all(".")
entropy(entropy_matrix1)
saveRDS(entropy_matrix1, "../productConfig/data/entropy_matrix1.rds")
entropy_matrix1 <- entropy(entropy_matrix1)
saveRDS(entropy_matrix1, "../productConfig/data/entropy_matrix1.rds")
devtools::load_all(".")
entropy(dm1row)
?rep
rep(1, 4)
devtools::load_all(".")
entropy(dm1row)
devtools::load_all(".")
entropy(dm1row)
devtools::load_all(".")
entropy(dm1row)
devtools::load_all(".")
entropy(dm1row)
devtools::load_all(".")
entropy(dm1row)
devtools::load_all(".")
entropy(dm1row)
devtools::load_all(".")
entropy(dm1row)
weight.entropy(myData, 99)
weight.entropy(myData, 9)
sum(weight.entropy(myData, 9)[[1]])
weight.entropy(myData, 9)
weight.entropy(myData, 9:10)
weight.entropy(myData, all.users)
weight.entropy(myData, all.users, cost_ids = 4)
weight.entropy(myData, 9:11, cost_ids = 4)
weight.entropy(myData, 9:11)
weight.entropy(myData, 9:11, rounds="first",  cost_ids = 4)
weight.entropy(myData, 9:11  cost_ids = 4)
weight.entropy(myData, 9:11,  cost_ids = 4)
weight.entropy(myData, 9:11)
weight.entropy(myData, 9:11,attr=1)
devtools::load_all(".")
weight.entropy(myData, 9:11, rounds="first")
weight.entropy(matrix(c(1.0, 0.85, 0.42, 0, 0.5, 0, 1, 0.7), 4, 2), attr=1:4)
weight.entropy(myData, 15:22)
weight.entropy(laptop_data, 40:45, attr= c(1, 3, 4), cost_ids = 4)
weight.entropy(myData, 40:45, attr= c(1, 3, 4), cost_ids = 4)
savedWeights <- weight.entropy(myData, c(6, 15, 18, 20, 26), attr = 1:4, cost_ids = 4, rounds=1:8)
lapply(savedWeights, sum)
