weight.entropy(laptop_data, 40:45, attr= c(1, 3, 4), cost_ids = 4)
weight.entropy(myData, 40:45, attr= c(1, 3, 4), cost_ids = 4)
savedWeights <- weight.entropy(myData, c(6, 15, 18, 20, 26), attr = 1:4, cost_ids = 4, rounds=1:8)
lapply(savedWeights, sum)
lapply(savedWeights, sum)
weight.entropy(myData, 9:10, attr=1:3, rounds="first")
devtools::load_all(".")
weight.entropy(myData, 9:10, attr=1:3, rounds="first")
weight.entropy(myData, 9:10, attr=1:3, rounds="all")
weight.entropy(myData, 9:10, attr=1:4, rounds="all")
decisionMatrix(myData, 9, rounds="all")
dm9
decisionMatrix(myData, 9, rounds="all")[[1]]
dm9<-decisionMatrix(myData, 9, rounds="all")[[1]]
dm9
entropy(dm9)
dm9[,1] <- c(0,0,0,0)
dm9
entropy(dm9)
entropy(matrix(c(1.0, 0.85, 0.42, 0, 0.5, 0, 1, 0.7), 4, 2), attr=1:4)
entropy(matrix(c(1.0, 0.85, 0.42, 0, 0.5, 0, 1, 0.7), 4, 2))
weights <- entropy(matrix(c(1.0, 0.85, 0.42, 0, 0.5, 0, 1, 0.7), 2, 4))
sum(weights)
entropy(matrix(c(1.0, 0.85, 0.42, 0, 0.5, 0, 1, 0.7), 8, 1))
entropy(matrix(c(1.0, 0.85, 0.42, 0, 0.5, 0, 1, 0.7), 1, 8))
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/new_BA.RData")
dm10
getAttrWeights(myData, 10, attr =1:4, rounds="all", cost_ids=4, weightFUN="differenceToIdeal")
devtools::load_all(".")
getAttrWeights(myData, 10, attr =1:4, rounds="all", cost_ids=4, weightFUN="differenceToIdeal")
getAttrWeights(myData, 10, attr =1:4, rounds="all", cost_ids=4)
devtools::load_all(".")
getAttrWeights(myData, 10, attr =1:4, rounds="all", cost_ids=4)
getAttrWeights(myData, 10, attr =1:4, rounds="all", cost_ids=4, weightFUN = "deprecated_FUN")
devtools::load_all(".")
getAttrWeights(myData, 10, attr =1:4, rounds="all", cost_ids=4, weightFUN = "deprecated_FUN")
getAttrWeights(myData, 10, attr =1:4, rounds="all", cost_ids=4, weightFUN="differenceToIdeal")
dm10
weight.entropy(myData, 10, attr=1:4, rounds="all", cost_ids=4)
weight.entropy(myData, 16, attr=1:4, rounds="all", cost_ids=4)
weight.entropy(myData, 18, attr=1:4, rounds="all", cost_ids=4)
fillMatrix
View(entropy_matrix1)
entropy_matrix1
?entropy
help(entropy)
entropy
entropy_matrix1
entropy(entropy_matrix1)
entropy_matrixTest <- entropy_matrix1
entropy_matrixTest[,5] <- c(0.25,0.25,0.25,0.25)
entropy(entropy_matrixTest)
entropy_matrixTest[,5] <- c(0.25,0.25,0.25,0.24)
entropy_matrixTest
entropy(entropy_matrixTest)
devtools::load_all(".")
dm10
weight.entropy(myData, 10, attr=1:4, rounds="all", cost_ids=4)
weight.entropy(myData, 16, attr=1:4, rounds="all", cost_ids=4)
weight.entropy(myData, 18, attr=1:4, rounds="all", cost_ids=4)
weight.entropy(myData, 18, attr=1:4, rounds="all")
decisionMatrix(myData, 18, rounds="all")
entropy(decisionMatrix(myData, 18, rounds="all")[[1]])
normalize.altMethod(decisionMatrix(myData, 18, rounds="all")[[1]])
normDM18 <- normalize.altMethod(decisionMatrix(myData, 18, rounds="all")[[1]])
entropy(normDM18)
weight.entropy(myData, 18, attr=1:4, rounds="all")
eentropy_matrix1
entropy_matrix1
devtools::load_all(".")
entropy(entropy_matrix1)
entropy(normDM18)
weight.entropy(myData, 6, attr=1:4, rounds="all")
weight.entropy(myData, 18, attr=1:4, rounds="all")
devtools::load_all(".")
weight.entropy(myData, 18, attr=1:4, rounds="all")
dm18
dm18 <- decisionMatrix(myData, 18, rounds="all")
dm18
devtools::load_all(".")
weight.entropy(myData, 18, attr=1:4, rounds="all")
devtools::load_all(".")
weight.entropy(myData, 18, attr=1:4, rounds="all")
dm18
devtools::load_all(".")
weight.entropy(myData, 18, attr=1:4, rounds="all")
devtools::load_all(".")
weight.entropy(myData, 18, attr=1:4, rounds="all")
weight.entropy(myData, all.users, attr=1:4, rounds="all")
devtools::load_all(".")
weight.entropy(myData, all.users, attr=1:4, rounds="all")
decisionMatrix(myData, all.users, attr=1:4, rounds="all")
weight.entropy(myData, all.users, attr=1:4, rounds="all")
weight.entropy(myData, all.users, attr=1:4, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.entropy(myData, all.users, attr=1:4, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.entropy(myData, all.users, attr=1:4, rounds="all")
decisionMatrix(myData, c(58,62), attr=1:4, rounds="all")
normalize.altMethod(decisionMatrix(myData, c(58,62), attr=1:4, rounds="all")[[1]])
weight.entropy(myData, all.users, attr=1:4, rounds="all")
decisionMatrix(myData, all.users, attr=1:4, rounds="all")
decisionMatrix(myData, 53, attr=1:4, rounds="all")
weight.differenceToIdeal(myData, 53, attr=1:4, rounds="all")
weight.entropy(myData, 53, attr=1:4, rounds="all")
normalize.altMethod(decisionMatrix(myData, 53, attr=1:4, rounds="all")[[1]])
weight.entropy(myData, all.users, attr=1:4, rounds="all", cost_ids=4)
decisionMatrix(myData, 42, attr=1:4, rounds="all")
weight.entropy(myData, 42, attr=1:4, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.entropy(myData, 42, attr=1:4, rounds="all", cost_ids=4)
weight.entropy(myData, 39, attr=1:4, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.entropy(myData, 39, attr=1:4, rounds="all", cost_ids=4)
decisionMatrix(myData, 39, attr=1:4, rounds="all", cost_ids=4)
c(1,1.2,1.5,1.7,2.05)
vecvect <- c(1,1.2,1.5,1.7,2.05)
sumsum <- sum(vecvect)
vecvect/sumsum
vecvect2 <- c(1,1.2,1.5,1.7,2.05)*10
vecvect2
vecvect2 <- c(1,1.2,1.5,1.7,2.05)+11
vecvect2
vecvect2 <- c(1,1.2,1.5,1.7,2.05)+10
vecvect2
sumsum2 <- sum(vecvect2)
sumsum2/vecvect2
vecvect2/sumsum2
vecvect/sumsum
vecvect2 <- c(1,1.2,1.5,1.7,2.05)+1000
sumsum2 <- sum(vecvect2)
vecvect2/sumsum2
vecvect
costTest <- c(-0.75,-0.4,-0.2,0.1,0.33)
costTest
min(costTest)
minTest <- min(costTest)
minTest/costTest
decisionMatrix(myData, all.users, rounds="all", cost_ids=4)
decisionMatrix(myData, all.users, rounds="all")
weight.entropy(myData, 6, rounds="all")
weight.entropy(myData, 6, rounds="all", cost_ids = 4)
devtools::load_all(".")
devtools::load_all(".")
weight.entropy(myData, 6, rounds="all", cost_ids = 4)
weight.entropy(myData, c(9,31), rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.entropy(myData, c(9,31), rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.entropy(myData, c(9,31), rounds="all", cost_ids = 4)
weight.entropy(myData, c(9), rounds="all", cost_ids = 4)[[1]]
we9old <- weight.entropy(myData, c(9), rounds="all", cost_ids = 4)[[1]]
dm9 <- decisionMatrix(myData, c(9), rounds="all", cost_ids = 4)[[1]]
dm9
apply(dm, 2, function(t) t/sum(t))
apply(dm9, 2, function(t) t/sum(t))
dm9nocost <- decisionMatrix(myData, c(9), rounds="all", cost_ids = 4)[[1]]
apply(dm9nocost, 2, function(t) t/sum(t))
dm9norm <- apply(dm9nocost, 2, function(t) t/sum(t))
we9old
entropy(dm9norm)
differenceToIdeal(dm9norm)
differenceToIdeal(dm9norm, attr=1:4)
weight.entropy(myData, 9, rounds="all")
?sd
devtools::load_all(".")
standardDeviation(dm9norm)
weight.entropy(myData, 9, rounds="all")
differenceToIdeal(dm9norm, attr=1:4)
dm9
devtools::load_all(".")
weight.standard(myData, 9, rounds="all")
weight.standard(myData, all.users, rounds="all")
devtools::load_all(".")
weight.standard(myData, 9, rounds="all")
standardDeviation(d9norm)
standardDeviation(dm9norm)
weight.standard(myData, 9, rounds="all", cost_ids = 4)
d9norm
normalize(myData, 9, rounds="all", cost_ids = 4)
d9
dm9
normalize(dm9)
normalize.altMethod(dm9)
dm9norm
weight.standard(myData, all.users, rounds="all", cost_ids=4)
weight.differenceToIdeal(myData, all.users, rounds="all", cost_ids=4)
weight.standard(myData, all.users, rounds="all", cost_ids=4)
weight.entropy(myData, all.users, rounds="all", cost_ids=4)
decisionMatrix(myData, 14, rounds="all")
devtools::load_all(".")
devtools::load_all(".")
dm9
normalize.minMax(dm9)
devtools::load_all(".")
normalize.minMax(dm9)
normalize.minMax(dm9, cost_ids=4)
normalize.minMax(dm9, attr = 1:4,cost_ids=4)
devtools::load_all(".")
normalize.minMax(dm9, attr = 1:4,cost_ids=4)
dm9
devtools::load_all(".")
weight.entropy(myData, all.users, rounds="all", cost_ids=4)
weight.entropy(myData, all.users, rounds="all")
devtools::load_all(".")
weight.differenceToIdeal(myData, all.users, rounds="all", cost_ids=4)
weight.differenceToIdeal(myData, all.users, rounds="all")
devtools::load_all(".")
normalize.minMax(dm9, attr = 1:4,cost_ids=4)
normalize.minMax(dm9, attr = 1:4)
dm99 <- decisionMatrix(myData,9)
dm99
dm99 <- decisionMatrix(myData,9)[[1]]
dm99
normalize.minMax(dm99, attr = 1:4)
dm99 <- decisionMatrix(myData,9, rounds="all")[[1]]
dm99
normalize.minMax(dm99, attr = 1:4, cost_ids=4)
normalize.altMethod(dm99, attr = 1:4, cost_ids=4)
dm99alt <- normalize.altMethod(dm99, attr = 1:4, cost_ids=4)
dm99minMax <- normalize.minMax(dm99, attr = 1:4, cost_ids=4)
entropy(dm99alt)
weight.entropy(myData, 9, rounds="all", cost-ids=4)
weight.entropy(myData, 9, rounds="all", cost_ids=4)
entropy(dm99minMax)
weight.entropy(myData, all.users, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.entropy(myData, all.users, rounds="all", cost_ids=4)
devtools::load_all(".")
dm9
normalize.minMax(dm9)
devtools::load_all(".")
normalize.minMax(dm9)
?apply
devtools::load_all(".")
normalize.minMax(dm9)
dm9
?apply
?"/"
devtools::load_all(".")
normalize.minMax(dm9)
weight.entropy(myData, all.users, rounds="all", cost_ids=4)
weight.standard(myData, all.users, rounds="all", cost_ids=4)
weight.differenceToIdeal(myData, all.users, rounds="all", cost_ids=4)
devtools::load_all(".")
devtools::load_all(".")
weight.differenceToIdeal(myData, all.users, rounds="all", cost_ids=4)
weight.entropy(myData, all.users, rounds="all", cost_ids=4)
dm9
weight.entropy(myData, 9, rounds="all", cost_ids=4)
weight.differenceToIdeal(myData, 9, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.standard(myData, 9, rounds="all", cost_ids=4)
weight.standard(myData, all.users, rounds="all", cost_ids=4)
devtools::load_all(".")
getAttrValues(myData)
dm9
normalize.altMethod(dm9)
normalize.altMethod(dm9,1:4, cost_ids=4)
devtools::load_all(".")
weight.differenceToIdeal(myData,9, rounds="all", cost_ids)
weight.differenceToIdeal(myData,9, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.differenceToIdeal(myData,9, rounds="all", cost_ids=4)
lapply(getAttrValues(myData, 1:4, max))
lapply(getAttrValues(myData, max,  1:4))
lapply(getAttrValues(myData), max,  1:4))
lapply(getAttrValues(myData), max,  1:4)
lapply(getAttrValues(myData), max)
lapply(getAttrValues(myData, 1:4), max)
lapply(getAttrValues(myData, 1:4), max)
lapply(getAttrValues(myData, 1:4), min)
get_attr_values(myData)
get_attr_values(myData, 1:4)
get_attr_values(myData, 1)
dm9
c(1,3)
rbind(c(1,3),2:3)
class(rbind(c(1,3),2:3))
testM <- rbind(c(1,3),2:3)
rbind(testM, testM, testM)
testM <- rbind(testM, testM, testM)
testM[-1,]
testM[-1:2,]
testM[-c(1,2),]
lapply(getAttrValues(myData, 1:4), max)
sapply(getAttrValues(myData, 1:4), max)
sapply(getAttrValues(myData, 4:1), max)
maxmax <- sapply(getAttrValues(myData, 4:1), max)
minmin <- sapply(getAttrValues(myData, 4:1), min)
maxmax
minmin
dm9
dm9binded <- rbind(maxmax, minmin, dm9)
dm9binded
?rbind
minmin <- sapply(getAttrValues(myData, 1:4), min)
minmin <- sapply(getAttrValues(myData, 1:4), min)
dm9binded <- rbind(maxmax, minmin, dm9)
dm9binded
maxmax <- sapply(getAttrValues(myData, 1:4), max)
dm9binded <- rbind(maxmax, minmin, dm9)
dm9binded
devtools::load_all(".")
weight.highestValue(myData, 9:10, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, 9:10, rounds="all")
?sapply
devtools::load_all(".")
weight.highestValue(myData, 9:10, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, 9:10, rounds="all")
sapply(getAttrValues(myData, 1:4), min, USE.NAMES = T)
weight.highestValue(myData, 9:12, rounds="all")
weight.highestValue(myData, 9:12, rounds="first")
matrix(1,3,3,)
matrix(1,3,3)
matrix(1,3,4)
weight.highestValue(myData, 9:10, rounds="all")
devtools::load_all(".")
dm9
normalize.highestValue(dm9)
devtools::load_all(".")
normalize.highestValue(dm9)
dm9nocost <- decision_matrix(myData,9,rounds="all")
dm9nocost
normalize.highestValue(dm9nocost)
normalize.highestValue(dm9nocost, cost_ids = 4)
normalize.highestValue(dm9nocost, 4)
devtools::load_all(".")
normalize.highestValue(dm9nocost, 4)
normalize.highestValue(dm9nocost)
devtools::load_all(".")
normalize.highestValue(dm9nocost)
dm9binded
maxmax
minmin
dm9binded <- rbind(maxmax, minmin, dm9nocost)
dm9binded
devtools::load_all(".")
normalize.highestValue(dm9nocost)
normalize.highestValue(dm9binded)
normalize.highestValue(dm9binded, 4)
normalize.highestValue(dm9binded)
normalize.highestValue(dm9binded, 1:4, 4)
devtools::load_all(".")
normalize.highestValue(dm9binded, 1:4, 4)
devtools::load_all(".")
normalize.highestValue(dm9binded, 1:4, 4)
devtools::load_all(".")
normalize.highestValue(dm9binded, 1:4, 4)
normalize.highestValue(dm9binded)
normalize.highestValue(dm9binded)
dm9binded
normalize.highestValue(dm9binded, 1:4, 4)
weight.highestValue(myData, 9, attr=1:4, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.highestValue(myData, 9, attr=1:4, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.highestValue(myData, 9, attr=1:4, rounds="all", cost_ids=4)
weight.highestValue(myData, 9:10, attr=1:4, rounds="all", cost_ids=4)
decisionMatrix(myData, 10)
weight.highestValue(myData, 9:10, attr=1:3, rounds="all", cost_ids=4)
weight.highestValue(myData, 9:10, attr=1:3, rounds="all", cost_ids=3)
devtools::load_all(".")
weight.highestValue(myData, 9:10, attr=1:3, rounds="all", cost_ids=4)
weight.highestValue(myData, 9:10, attr=1:3, rounds="all", cost_ids=3)
weight.highestValue(myData, 9:10, attr=1:3, rounds="first", cost_ids=3)
devtools::load_all(".")
weight.highestValue(myData, 9:10, attr=1:3, rounds="first", cost_ids=3)
weight.highestValue(myData, 9:10, attr=1:3, rounds="first", cost_ids=3)
weight.highestValue(myData, 9:10, attr=1:3, rounds="all", cost_ids=3)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
weight_higher_sum_value(myData, 9, rounds="all")
getAttrWeights(myData, 9, rounds="all")
devtools::load_all(".")
getAttrWeights(myData, 9, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, all.users, attr=1:4, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.highestValue(myData, 9, attr=1:3, rounds="first", cost_ids=3)
weight.highestValue(myData, 10, attr=1:3, rounds="first", cost_ids=3)
weight.highestValue(myData, 10, attr=1:3, rounds="all", cost_ids=3)
dm10norm <- weight.highestValue(myData, 10, attr=1:3, rounds="all", cost_ids=4)[[1]]
dm10norm <- weight.highestValue(myData, 10, attr=1:4, rounds="all", cost_ids=4)[[1]]
dmnorm10
dm10norm
highestValue(dm10norm)
decisionMatrix(myData, 10, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, 10, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, 10, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, 10, rounds="all")
weight.highestValue(myData, 10, rounds="all", cost_ids = 4)
weight.highestValue(myData, 10, attr=1:4,rounds="all", cost_ids = 4)
weight.highAndStandard(myData, 10, attr=1:4,rounds="all", cost_ids = 4)
devtools::load_all(".")
devtools::load_all(".")
weight.highAndStandard(myData, 10, attr=1:4,rounds="all", cost_ids = 4)
weight.highestValue(myData, 10, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highestValue(myData, 10, rounds="all", cost_ids = 4)
weight.highestValue(myData, 10, attr=1:4 rounds="all", cost_ids = 4)
weight.highestValue(myData, 10, attr=1:4, rounds="all", cost_ids = 4)
weight.highestValue(myData, 10, rounds="all", cost_ids = 4)
get_attrs_ID(myData)
devtools::load_all(".")
weight.highestValue(myData, 10, rounds="all", cost_ids = 4)
weight.highestValue(myData, all.users, rounds="all", cost_ids = 4)
weight.highestValue(myData, all.users, rounds="all")
weight.highestValue(myData, all.users, rounds="all", gamma=0.8)
weight.highestValue(myData, all.users, rounds="all")
weight.highestValue(myData, all.users, rounds="all",cost_ids = 4)
devtools::load_all(".")
decisionMatrix(myData, 58:63, rounds="all",cost_ids = 4)
weight.highestValue(myData, all.users, rounds="all",cost_ids = 4)
devtools::load_all(".")
weight.highestValue(myData, all.users, rounds="all",cost_ids = 4)
devtools::load_all(".")
weight.highestValue(myData, all.users, rounds="all",cost_ids = 4)
devtools::load_all(".")
devtools::load_all(".")
weight.highestValue(myData, all.users, rounds="all",cost_ids = 4)
devtools::load_all(".")
weight.highestValue(myData, all.users, rounds="all",cost_ids = 4)
weight.highestValue(myData, all.users, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, all.users, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, all.users, rounds="all")
weight.highestValue(myData, all.users, rounds="all", cost_ids = 4)
weight.highestValue(myData, all.users, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highestValue(myData, 61:62, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highestValue(myData, 61:62, rounds="all", cost_ids = 4)
devtools::load_all(".")
devtools::load_all(".")
weight.highAndStandard(myData, 61:62, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highAndStandard(myData, 61:62, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highAndStandard(myData, 61:62, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highAndStandard(myData, 61:62, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highAndStandard(myData, 61:62, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highAndStandard(myData, 61:62, rounds="all", cost_ids = 4)
weight.highAndStandard(myData, 6, rounds="all", cost_ids = 4)
weight.highAndStandard(myData, all.users, rounds="all", cost_ids = 4)
weight.highAndStandard(myData, all.users, rounds="all")
devtools::load_all(".")
weight.highestValue(myData, 61:62, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highestValue(myData, 61:62, rounds="all", cost_ids = 4)
weight.highestValue(myData, 61:62, rounds="all", cost_ids = 4)
weight.highestValue(myData, 61:62, attr=1:4, rounds="all", cost_ids = 4)
weight.highestValue(myData, 61:62, attr=1:3, rounds="all", cost_ids = 4)
weight.highestValue(myData, 61:62, attr=1:3, rounds="all")
weight.highestValue(myData, 61:62, attr=2:4, rounds="all", cost_ids = 4)
weight.highestValue(myData, 61:62, attr=1:4, rounds="all", cost_ids = 4)
devtools::load_all(".")
weight.highestValue(myData, 61:62, attr=1:4, rounds="all", cost_ids = 4)
weight.highestValue(myData, 61:62, attr=2:4, rounds="all", cost_ids = 4)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
trp10.13
trpValueMatrix(myData, 9:10, rounds="all")
decisionMatrix(myData, 9:10, rounds="all")
devtools::load_all(".")
trpValueMatrix(myData, 9:10, rounds="all")
trpValueMatrix(myData, 9:10, rounds="all")
decisionMatrix(myData, 9:10, rounds="all")
devtools::load_all(".")
trpValueMatrix(myData, 9:10, rounds="all")
trpValueMatrix(myData, 10, rounds="all")
decisionMatrix(myData, 10, rounds="all")
decisionMatrix.oneAttr(myData, 10, rounds="all", attr=1)
trpValueMatrix.oneAttr(myData, 10, rounds="all", attr=1)
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, 10, rounds="all", attr=1)
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, 10, rounds="all", attr=1)
decisionMatrix(myData, 10, rounds="all", attr=1)
trpValueMatrix.oneAttr(myData, 10, rounds="all", attr=1)
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, 10, rounds="all", attr=1)
trpValueMatrix(myData, 10, rounds="all", attr=1, cost_ids=4)
trpValueMatrix(myData, 10, rounds="all", attr=1)
trpValueMatrix(myData, 10, rounds="all")
devtools::load_all(".")
trpValueMatrix(myData, 10, rounds="all")
devtools::load_all(".")
trpValueMatrix(myData, 10, rounds="all")
devtools::load_all(".")
trpValueMatrix(myData, 10, rounds="all")
devtools::load_all(".")
trpValueMatrix(myData, 10, rounds="all")
devtools::load_all(".")
trpValueMatrix(myData, 10, rounds="all")
