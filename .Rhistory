devtools::load_all(".")
devtools::load_all(".")
find_rtools()
library(devtools)
find_rtools(T)
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/new_BA.RData")
overallPV(myData, 9)
overall_pv(myData, 9)
overallPV(myData, 9:11)
overall_pv(myData, 9, rounds="all")
overall_pv(myData, 9, rounds="all", weight = 1:4)
overall_pv(myData, 9, weight = 1:4)
overall_pv(myData, 10, weight = 1:4)
overallPV(myData, 9, weight = 1:4)
overallPV(myData, 10, weight = 1:4)
overallPV(myData, 10:12, weight = 1:4)
devtools::load_all(".")
overallPV(myData, 10:12, weight = 1:4)
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/new_BA.RData")
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/.RData")
trp10.13 <- trpValueMatrix(myData, 10, attr=1:3, rounds="all")
devtools::load_all(".")
devtools::load_all(".")
trp10.13 <- trpValueMatrix(myData, 10, attr=1:3, rounds="all")
trp10.14 <- trpValueMatrix(myData, 10, attr=4, rounds="all", mr=-0.40, sq=-0.17,, g= 0.10)
trp10.13
trp10.14
dm10 <- decisionMatrix(myData, 10 , rounds="all")
dm10
trp10.14 <- trpValueMatrix(myData, 10, attr=4, rounds="all", mr=-0.40, sq=-0.17,, g= 0.10, cost_ids = 4)
trp10.14
trp10.13
dm10
mapply(cbind, trp10.13, trp10.14)
mapply(cbind, trp10.13, trp10.14, SIMPLIFY = F)
trp10.full <- mapply(cbind, trp10.13, trp10.14, SIMPLIFY = F)
save.image("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/new_BA.RData")
overallPV(myData, 10, rounds="all", cost_ids = 4)
mapply(overall_pv_extend, trp10.full)
mapply(overall_pv_extend, trp10.full, weight= getAttrWeights(myData, 10, rounds="all", cost_ids = 4))
trp10.overallPV <- mapply(overall_pv_extend, trp10.full, weight= getAttrWeights(myData, 10, rounds="all", cost_ids = 4))
head(trpValueMatrix(myData, all.users, attr=1:3, rounds="all"))
head(trpValueMatrix(myData, 9:10, attr=1:3, rounds="all"))
head(trpValueMatrix(myData, all.users, attr=1:3, rounds="all"))
overallPV(myData, all.users, attr=1:3, rounds="all")
devtools::load_all(".")
head(trpValueMatrix(myData, all.users, attr=1:3, rounds="all"))
devtools::load_all(".")
head(trpValueMatrix(myData, all.users, attr=1:3, rounds="all"))
?rm
all.users
rm(63, list(all.users))
list(all.users)
rm("63", all.users)
length(all.users)
all.users <- getAllUserIds(myData, 9)
all.users <- getAllUserIds(myData)
length(all.users)
all.users[51] <- NULL
all.users[50] <- NULL
all.users[50] <- 6
all.users[50] <- 62
all.users[51] <- 6
all.users
all.users <- unique(all.users)
all.users
head(trpValueMatrix(myData, all.users, attr=1:3, rounds="all"))
devtools::load_all(".")
head(trpValueMatrix(myData, all.users, attr=1:3, rounds="all"))
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="all")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="all")
devtools::load_all(".")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="all")
trpValueMatrix.oneAttr(myData, 63, attr=1, rounds="all")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="first")
devtools::load_all(".")
norm.gainLoss(myData, 9, rounds="all")
norm.gainLoss(myData, 9, rounds="first")
norm.gainLoss(myData, 63, rounds="first")
?max
devtools::load_all(".")
norm.gainLoss(myData, 63, rounds="first")
devtools::load_all(".")
norm.gainLoss(myData, 63, rounds="first")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="first")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="first")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="all")
?apply
max(0)
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="all")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="all")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="all")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="all")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="first")
devtools::load_all(".")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="first")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="first")
devtools::load_all(".")
trpValueMatrix.oneAttr(myData, all.users, attr=1, rounds="first")
trpValueMatrix.oneAttr(myData, 63, attr=1, rounds="first")
trpValueMatrix.oneAttr(myData, 63, attr=1, rounds="all")
all.users <- getAllUserIds(my)
all.users <- getAllUserIds(myData)
trpValueMatrix(myData, all.users, attr=1:3, rounds="all")
trpValueMatrix(myData, 9, attr=1:3, rounds="all")
devtools::load_all(".")
trpValueMatrix(myData, 9, attr=1:3, rounds="all")
trpValueMatrix(myData, 10, attr=1:3, rounds="all")
trpValueMatrix(myData, 10, attr=1:3, rounds="all")
hmaxVector <- lapply(hmaxVector, function(temp2) replace(temp2, temp2==0.0, 1.00)) #remove 0 to avoid NA when dividing
trpValueMatrix(myData, 10, attr=1:3, rounds="all")
trp10.13
identical(trpValueMatrix(myData, 10, attr=1:3, rounds="all"),trp10.13)
devtools::load_all(".")
trpValueMatrix(myData, 10, attr=1:3, rounds="all")
trpValueMatrix.oneAttr(myData, 10, attr=1:3, rounds="all")
trpValueMatrix.oneAttr(myData, 10, attr=1, rounds="all")
trpValueMatrix.oneAttr(myData, 11, attr=1, rounds="all")
trpValueMatrix.oneAttr(myData, 11, attr=1, rounds="first")
trpValueMatrix.oneAttr(myData, 11, attr=1, rounds="last")
devtools::load_all(".")
devtools::load_all(".")
trpValueMatrix(myData, 11, attr=1, rounds="last")
trpValueMatrix(myData, 10, attr=1, rounds="last")
identical(trpValueMatrix(myData, 10, attr=1:3, rounds="all"),trp10.13)
trp10.14
dm10
c(1,2,3) *(-1)
devtools::load_all(".")
devtools::load_all(".")
trpValueMatrix(myData, 10, attr=1:3, rounds="all", mr =-0.10,sq=0.17,g=0.40, cost_ids=4)
devtools::load_all(".")
trpValueMatrix(myData, 10, attr=1:3, rounds="all", mr =-0.10,sq=0.17,g=0.40, cost_ids=4)
trpValueMatrix(myData, 10, attr=1:3, rounds="all", cost_ids=4)
trp10.13
devtools::load_all(".")
trpValueMatrix(myData, 10, attr=1:3, rounds="all", cost_ids=4)
devtools::load_all(".")
devtools::load_all(".")
trpValueMatrix(myData, 10, attr=1:3, rounds="all", cost_ids=4)
trpValueMatrix(myData, 10, attr=1:4, rounds="all", cost_ids=4)
trpValueMatrix(myData, 10, attr=4, rounds="all", cost_ids=4)
trpValueMatrix(myData, 10, attr=4, rounds="all", mr =-0.10,sq=0.17,g=0.40, cost_ids=4)
trpValueMatrix(myData, 10, attr=4, rounds="all", mr =-0.10,sq=0.17,g=0.40, cost_ids=4)
trp10.14
devtools::load_all(".")
trp10.full
devtools::load_all(".")
trp.overallPV_extend(trp10.full, getAttrWeights(myData, 10, rounds="all", cost_ids=4))
overallPV(myData, 10, rounds="all", cost_ids=4)
overallPV(myData, 10, rounds="all", cost_ids=4, refps=(1.5,1.5,1.5,0.17))
overallPV(myData, 10, rounds="all", cost_ids=4, refps=(1.5, 1.5, 1.5, 0.17))
overallPV(myData, 10, rounds="all",  refps=(1.5, 1.5, 1.5, 0.17), cost_ids=4)
overallPV(myData, 10, rounds="all",  refps=c(1.5, 1.5, 1.5, 0.17), cost_ids=4)
decisionMatrix(myData, 9, attr=4)
devtools::load_all(".")
?do.call
devtools::load_all(".")
referencePoints(myData,9)
xx <- norm.gainLoss.sep(myData, 9)
xx
norm.gainLoss(myData, 9)
norm.gainLoss(myData, 9, unbinded = T)
norm.gainLoss(myData, 9, binded = F)
trpValueMatrix(myData, all.users, rounds = "all")
devtools::load_all(".")
trpValueMatrix(myData, all.users, rounds = "all")
trpValueMatrix(myData, all.users, rounds = "all")
system.time(replicate(10, trpValueMatrix(myData, all.users, rounds = "all")))
system.time(replicate(100, trpValueMatrix(myData, all.users, rounds = "all")))
system.time(replicate(100, overallPV(myData, all.users, rounds = "all")))
system.time(replicate(100, overallPV(myData, all.users, rounds = "all", weight=1:4)))
save.image("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/trp-test-data.RData")
load("C:/Users/diego/Google Drive/KIT/Seminar_eC_HCI/R/productConfig/new_BA.RData")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?saveRDS
?saveRDS
saveRDS(trp10.13, "../productConfig/data/trp10-13.rds")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
trp10.13 <- readRDS("C:\Users\diego\Google Drive\KIT\Seminar_eC_HCI\R\productConfig/data/trp10-13.rds")
trp10.13 <- trpValueMatrix(myData, 10, attr=1:3, rounds="all")
trp10.13
saveRDS(trp10.13, "../productConfig/data/trp10-14.rds")
trp10.4 <- trp10.14
trp10.14
trp10.4
rm(trp10.14)
saveRDS(trp10.4, "../productConfig/data/trp10-4.rds")
trp10.14 <- trpValueMatrix(myData, 10, attr=4, rounds="all", mr=-0.40, sq=-0.17,, g= 0.10, cost_ids=4)
trp10.14
trp10.14 <- trpValueMatrix(myData, 10, attr=4, rounds="all", mr=-0.10, sq=0.17, g= 0.40, cost_ids=4)
trp10.14
trp10.4
trp10.14 <- trpValueMatrix(myData, 10, attr=4, rounds="all", mr=-0.40, sq=-0.17, g= 0.10)
trp10.4
trp10.14
trp10.14 <- trpValueMatrix(myData, 10, attr=4, rounds="all", mr=-0.40, sq=-0.17, g= 0.10)
trp10.14
dm10
decisionMatrix(myData, 10, rounds=1:3)
decision_matrix(myData, 9, rounds=1:3)
devtools::load_all(".")
decisionMatrix(myData, 10, rounds="all")
decision_matrix(myData, 9, rounds=list(a=1:3))
decisionMatrix(myData, 9, rounds=list(a=1:3))
decisionMatrix(myData, 9, rounds=list(a=1:8))
decisionMatrix(myData, 9, rounds=list(a=1:3))
decisionMatrix(myData, 9:10, rounds=list(a=1:3))
decisionMatrix(myData, 9:10, rounds=list(a=1:3, b=1:2))
is.char("all")
?is.vector
is.character("all")
is.character(1:3)
is.character(list(a = "a"))
is.character(list(a = 1:3))
!is.char("all")
!is.character("all")
!is.character(1:3)
is.vector("all")
devtools::load_all(".")
decisionMatrix(myData, 9:10, rounds=list(a=1:3, b=1:2))
devtools::load_all(".")
devtools::load_all(".")
is.character(NULL)
devtools::load_all(".")
devtools::load_all(".")
decisionMatrix(myData, 9:10, rounds=list(a=1:3, b=1:2))
decisionMatrix(myData, 9:10, rounds=list(a=1:3))
decisionMatrix(myData, 9:10, rounds=list(a=1:6))
decisionMatrix(myData, 9:10, rounds=list(a=1))
decisionMatrix(myData, 9:10, rounds=1:3
))
decisionMatrix(myData, 9:10, rounds=1:3)
devtools::load_all(".")
devtools::load_all(".")
decisionMatrix(myData, 9:10, rounds=1:8)
devtools::load_all(".")
decisionMatrix(myData, 9:10, rounds=1:8)
devtools::load_all(".")
decisionMatrix(myData, 9:10, rounds=1:8)
devtools::load_all(".")
decisionMatrix(myData, 9:10, rounds=1:8)
devtools::load_all(".")
decisionMatrix(myData, 9:10, rounds=1:8)
devtools::load_all(".")
?decision_matrix
devtools::load_all(".")
?decision_matrix
?gain_matrix()
library(productConfig)
?gain_matrix()
?gain_matrix
help(gain_matrix)
?gain_matrix
?as.list
?gain_matrix
?gain_matrix
library(roxygen2)
?gain_matrix
devtools::load_all(".")
?gain_matrix
gainMatrix
help("gain_matrix")
help("gain_matrix", package="productConfig")
?do.call
trpValueMatrix(myData, 9, mr = NULL, sq = NULL, g = NULL)
decisionMatrix(myData, 9, attr=3:1)
decisionMatrix(myData, 9, attr=4:1)
?trpValueMatrix
devtools::load_all(".")
devtools::check_doc()
devtools::check()
devtools::load_all(".")
trpValueFunction(aMatrix = matrix(1:6, 2, 3), triRefps = c(1,4,8))
trpValueFunction(aMatrix = matrix(1:6, 2, 3), triRefps = c(10,40,80))
trpValueFunction(aMatrix = matrix(1:6, 2, 3), triRefps = c(1,3,4.5))
trpValueFunction(aMatrix = matrix(1:6, 2, 3), triRefps = c(2,3,4.5))
trpValueFunction(matrix(1:16, 16, 1), triRefps = c(4, 8.9, 12.5))
trpValueFunction(matrix(1:16, 16, 1), triRefps = c(4, 8.9, 12.5), beta_f = 7)
trpValueFunction_extend(8:10)
trpValueFunction_extend(4, mr = 1, sq = 3, g = 8, beta_f = 7)
trpValueFunction_extend(0.18, mr = 0.15, sq = 0.55, g = 1.10)
devtools::load_all(".")
overallPV_interface(trp10.14, weight(1,2,3))
overallPV_interface(trp10.14, weight=c(1,2,3))
overallPV_interface(trp10.14, weight=c(1,2))
overallPV_interface(trp10.14, weight=c(1,2,3,4))
xx
trp10.full
overallPV_interface(trp10.14, weight=c(1,2,3,4))
overallPV_interface(trp10.full, weight=c(1,2,3,4))
warnings()
overallPV_interface
overallPV_interface(trp10.full, weight=c(1,2,3,4))
trp10.full
overallPV_interface(trp10.full, weight=list(ww = c(1,2,3,4)))
devtools::load_all(".")
devtools::load_all(".")
overallPV_interface(trp10.full, weight=c(1,2,3,4))
overallPV_interface(trp10.full, weight=list(ww = c(1,2,3,4), w2= c(1,2,4,5)))
overallPV_interface(trp10.full, weight=list(ww = c(1,2,3,4), w2= c(1,2,3,4)))
overallPV_interface(trp10.full, weight=list(ww = c(1,2)))
devtools::load_all(".")
overallPV_interface(trp10.full, weight=list(ww = c(1,2)))
overallPV_interface(trp10.full, weight=list(ww = c(1,2,3,4)))
overallPV_interface(trp10.full, weight=list(ww = c(1,2,3)))
overallPV_interface(trp10.13 , weight=list(ww = c(1,2,3,4)))
devtools::load_all(".")
overallPV_interface(trp10.13 , weight=list(ww = c(1,2,3,4)))
devtools::load_all(".")
overallPV_interface(trp10.13 , weight=list(ww = c(1,2,3,4)))
?ncol
devtools::load_all(".")
overallPV_interface(trp10.13 , weight=list(ww = c(1,2,3,4)))
overallPV_interface(trp10.13[[1]] , weight=list(ww = c(1,2,3,4)))
is.matrix(matrix(1:6,2,3))
is.list(matrix(1:6,2,3))
overallPV_interface(trpValueMatrix(myData, 9:11) , weight=list(ww = c(1,2,3,4)))
overallPV_interface(trpValueMatrix(myData, 9:11) , weight=list(ww = c(1,2,3,4)))
overallPV_interface(trpValueMatrix(myData, 9:11) , weight=list(ww = c(1,2,3,4), w2=c(1,3,4)))
devtools::load_all(".")
overallPV_interface(trpValueMatrix(myData, 9:11) , weight=list(ww = c(1,2,3,4), w2=c(1,3,4)))
as.list(matrix(1:6,2,3))
devtools::load_all(".")
overallPV_interface(trpValueMatrix(myData, 9:11) , weight=list(ww = c(1,2,3,4), w2=c(1,3,4)))
devtools::load_all(".")
overallPV_interface(trpValueMatrix(myData, 9:11) , weight=list(ww = c(1,2,3,4), w2=c(1,3,4)))
devtools::load_all(".")
overallPV_interface(trpValueMatrix(myData, 9) , weight=list(ww = c(1,2,3,4), w2=c(1,3,4)))
overallPV_interface(trpValueMatrix(myData, 9) , weight=list(ww = c(1,2,3,4)))
overallPV_interface(trpValueMatrix(myData, 9)[[1]] , weight=list(ww = c(1,2,3,4)))
overallPV_interface(matrix(1:8,2,4) , weight=list(ww = c(1,2,3,4)))
getAttrWeights(weight=c(1,2,3,4))
devtools::load_all(".")
overallPV_interface(trpValueMatrix(myData, 9) , weight=list(ww = c(1,2,3,4), w2=c(1,3,4)))
Show Traceback
Rerun with Debug
overallPV_interface(trpValueMatrix(myData, 9) , weight=list(ww = c(1,2,3,4), w2=c(1,3,4)))
devtools::load_all(".")
overallPV_interface(trpValueMatrix(myData, 9) , weight=list(ww = c(1,2,3,4), w2=c(1,3,4)))
devtools::load_all(".")
overallPV_interface(trpValueMatrix(myData, 9) , weight=list(ww = c(1,2,3,4), w2=c(1,3,4)))
devtools::load_all(".")
overallPV_interface(trpValueMatrix(myData, 9) , weight=list(ww = c(1,2,3,4), w2=c(1,3,4)))
overallPV_interface(trpValueMatrix(myData, 9) , weight=list(ww = c(1,2,3,4), w2=c(1,3,4,2))
)
devtools::load_all(".")
overallPV_interface(aMatrix = matrix(1:8, 2, 34, weight = c(0.25, 0.3, 0.15, 0.3))
)
devtools::load_all(".")
overallPV_interface(aMatrix = matrix(1:8, 2, 34, weight = c(0.25, 0.3, 0.15, 0.3))
)
devtools::load_all(".")
overallPV_interface(trp.ValueMatrix = matrix(1:8, 2, 34, weight = c(0.25, 0.3, 0.15, 0.3)))
devtools::load_all(".")
overallPV_interface(trp.ValueMatrix = matrix(1:8, 2, 4), weight = c(0.25, 0.3, 0.15, 0.3)))
devtools::load_all(".")
overallPV_interface(trp.ValueMatrix = matrix(1:8, 2, 4), weight = c(0.25, 0.3, 0.15, 0.3))
overallPV_interface(matrix(1:32, 16, 2), c(0.72, 0.25))
overallPV_interface(list(matrix1 = (1:32, 16, 2), matrix2 = (1:14, 7, 2)), weight = c(100, 200))
overallPV_interface(list(matrix1 = (1:32, 16, 2), matrix2 = (1:14, 7, 2)), weight = c(100, 200))
list(matrix1 = (1:32, 16, 2), matrix2 = (1:14, 7, 2))
?list
overallPV_interface(list(matrix1 = matrix(1:32, 16, 2), matrix2 = matrix(1:14, 7, 2)), weight = c(100, 200))
overallPV_interface(list(m1 = matrix(1:32, 16, 2), m2 = matrix(1:14, 7, 2)),list(weight1 = c(100, 200), weight2 = c(20, 50)))
devtools::load_all(".")
devtools::load_all(".")
gainMatrix(myData, 9:11)
gainMatrix(myData, 9:11, rounds="all")
gainMatrix2(myData, 9:11, rounds="all")
system.time(replicate(100, gainMatrix2(myData, 9:11, rounds="all")))
system.time(replicate(100, gainMatrix(myData, 9:11, rounds="all")))
system.time(replicate(100, gainMatrix2(myData, 9:11, rounds="all")))
system.time(replicate(100, gainMatrix2(myData, all.users, rounds="all")))
system.time(replicate(100, gainMatrix(myData, all.users, rounds="all")))
system.time(replicate(100, trpValueMatrix(myData, all.users, rounds="all")))
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
trpValueMatrix(myData, all.users, rounds="all")
trpValueMatrix(myData, 9, mr=5)
load("U:/Development/productConfig/new_BA.RData")
all.users
summary(weight.entropy(myData, all.users, rounds="all"))
library()
install.packages("devtools")
library("devtools")
library("devtools")
library(devtools)
load_all()
load_all(".")
devtools::load_all(".")
install.packages("roxygen2")
devtools::load_all(".")
summary(weight.entropy(myData, all.users, rounds="all"))
weight.entropy(myData, all.users, rounds="all")
weight.entropy(myData, all.users, rounds="all")
devtools::load_all(".")
weight.entropy(myData, all.users, rounds="all")
load("U:/Development/productConfig/new_BA.RData")
dm9
dm10
dm10 <- dm10[[1]]
normalize.altMethod(dm10)
entropy(normalize.altMethod(dm10))
entropy(normalize.minMax(dm10))
normalize.minMax(dm10)
devtools::load_all(".")
weight.entropy(myData, all.users, rounds="all")
devtools::load_all(".")
weight.entropy(myData, all.users, rounds="all")
devtools::load_all(".")
weight.entropy(myData, all.users, rounds="all")
devtools::load_all(".")
weight.entropy(myData, all.users, rounds="all")
dm9
entropy(decisonMatrix(myData, 9, rounds="all"=[[1]]))
entropy(decisonMatrix(myData, 9, rounds="all")[[1]])
entropy(decisionMatrix(myData, 9, rounds="all")[[1]])
decisionMatrix(myData, 9, rounds="all")[[1]]
normalize.minMax(decisionMatrix(myData, 9, rounds="all")[[1]])
dm9normMin <- normalize.minMax(decisionMatrix(myData, 9, rounds="all")[[1]])
entropy(dm9normMin)
dm9normMin <- normalize.altMethod(decisionMatrix(myData, 9, rounds="all")[[1]])
dm9normMin <- normalize.minMax(decisionMatrix(myData, 9, rounds="all")[[1]])
dm9normAlt <- normalize.altMethod(decisionMatrix(myData, 9, rounds="all")[[1]])
dm9normAlt
d9normMin
dm9normMin
entropy(dm9normMin)
differenceToIdeal(dm9normAlt)
differenceToIdeal(dm9normAlt, attr=1:4)
devtools::load_all(".")
devtools::load_all(".")
weight.entropy(myData, 9, rounds="all")
weight.entropy(myData, 9, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.entropy(myData, 9, rounds="all", cost_ids=4)
weight.entropy(myData, all.users, rounds="all", cost_ids=4)
weight.standard(myData, all.users, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.standard(myData, all.users, rounds="all", cost_ids=4)
devtools::load_all(".")
devtools::load_all(".")
weight.standard(myData, all.users, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.standard(myData, all.users, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.standard(myData, all.users, rounds="all", cost_ids=4)
decisionMatrix(myData, 9, rounds="all")
decisionMatrix(myData, 6, rounds="all")
devtools::load_all(".")
weight.standard(myData, all.users, rounds="all", cost_ids=4)
weight.standard(myData, 6, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.standard(myData, 6, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.standard(myData, 6, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.standard(myData, 6, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.standard(myData, 6, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.standard(myData, 6, rounds="all", cost_ids=4)
decisionMatrix(myData, 6, rounds="all")
weight.standard(myData, 6, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.standard(myData, 6, rounds="all", cost_ids=4)
weight.standard(myData, all.users, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.standard(myData, all.users, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.standard(myData, all.users, rounds="all", cost_ids=4)
$`57`
attr1     attr2     attr3     attr4
0.3956439 0.3021780 0.0000000 0.3021780
$`58`
attr1     attr2     attr3     attr4
0.3169873 0.3169873 0.0000000 0.3660254
$`59`
attr1     attr2     attr3     attr4
0.1651209 0.2610791 0.2841586 0.2896413
$`60`
attr1     attr2     attr3     attr4
0.3333333 0.3333333 0.0000000 0.3333333
$`61`
attr1     attr2     attr3     attr4
0.3368993 0.1631007 0.1631007 0.3368993
$`62`
attr1 attr2 attr3 attr4
0.0   0.5   0.0   0.5
$`63`
[1] 0.25 0.25 0.25 0.25
weight.standard(myData, all.users, rounds="all", cost_ids=4)
devtools::load_all(".")
weight.standard(myData, all.users, rounds="all", cost_ids=4)
devtools::load_all(".")
devtools::load_all(".")
