% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TRPFunctions.R
\name{overallPV_interface}
\alias{overallPV_interface}
\title{cost_ids, enter normal reference points, we will convert them. cost_ids has to equal the attribute you are inputting
DOCU: Converting tri.refps, no need to convert if attribute is of type cost.
New function as interface with weights and your trp.valueMatrix
Docu: For the way the trp function works it is a little more complicated than for overallPV for the pt
here we have to manually calculate the AttributeWeights whit your desired function, e.g ww <- getAttrWeights(...)
and the trp.ValueMatrix separately as well, trp.VM <- mapply() OR trpValueMatrix(...)
then giving to this function as input and getting the desired result}
\usage{
overallPV_interface(trp.ValueMatrix, weight = NULL)
}
\arguments{
\item{dataset}{data.frame with the user generated data from a product
configurator. See \code{decision_matrix} for specifications of the dataset.}

\item{userid}{a vector of integers that gives the information of which users
the matrix should be calculated. Vectorised.}
}
\value{
a vector of overall prospect values
}
\description{
DOCU: Explain what _extends is in pC, singalizes major functions that do not take the normal inputs but user
other functions' results to work.
Calculates overall prospect values for any given value matrix and weights
}
\details{
This function was created

This function only makes sense to use with multiple attributes, it
  those attributes have exactly the same three reference points (mr, sq, g).
  Therefore you will have to manually calculate all the value matrices for
  the different attributes (with different values) and cbind them together
  using mapply. The full matrix can then be given as an input to the
  \code{\link{trp.overallPV_interface}} fucntion to calculate the overall
  prospect values for each round.

  General: The value matrix has ncol = number of attributes you selected or
  all(default) and nrow = number of rounds you selected or the first and
  last(default) for all selected users.
}
\examples{
#' trpValueFunction(aMatrix = matrix(1:6, 2, 3), triRefps = c(2,3,4.5))
trpValueFunction(matrix(1:16, 16, 1), triRefps = c(4, 8.9, 12.5), beta_f = 7)
mix these 2
trpValueMatrix(pc_config_data, 9:11, mr = 0.5, sq = 0, g = 2.5)
trpValueMatrix(aDataFrame, userid = 100, rounds = "all", mr = 0.5, sq = 0, g = 2.5)

}

